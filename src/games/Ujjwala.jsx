// src/games/Ujjwala.jsx

import React, { useState, useMemo, useEffect, useRef } from "react";
import UjjwalaYojana from "../assets/UjjwalaYojana.mp4"
// --- Audio Assets ---
const correctAnswerSound = new Audio('https://actions.google.com/sounds/v1/positive/correct.ogg');
const wrongAnswerSound = new Audio('https://actions.google.com/sounds/v1/negative/failure.ogg');
const gameStartSound = new Audio('https://actions.google.com/sounds/v1/alarms/digital_watch_alarm_long.ogg');
const transformationSound = new Audio('https://actions.google.com/sounds/v1/impacts/magical_chime.ogg');

// --- Full Multilingual Content for the New Game ---
const gameData = {
  en: {
    title: "ü™î Ujjwala's Happy Kitchen ü™î",
    intro: { description: "Play a fun game to learn about the Ujjwala scheme and see how it helps families like yours!", startButton: "Play Game" },
    quizIntro: { title: "Step 1: The Knowledge Challenge!", instruction: "Answer these questions to earn the new gas cylinder!" },
    game2: { instruction: "You passed the quiz! Now, let's change the kitchen. Drag the old stove out.", instruction2: "Perfect! Now bring in the new LPG cylinder.", success: "Look! A clean and happy kitchen!" },
    videoUrl: UjjwalaYojana,
    videoNotSupported: "Your browser does not support the video tag.",
    questions: [ { type: 'mcq', points: 10, question: "When was the PMUY (Pradhan Mantri Ujjwala Yojana) scheme launched?", options: [ { id: 1, text: "August 2015", isCorrect: false }, { id: 2, text: "May 2016", isCorrect: true }, { id: 3, text: "January 2017", isCorrect: false }, { id: 4, text: "October 2018", isCorrect: false } ], feedbackCorrect: "‚úÖ Correct!", feedbackIncorrect: "‚ùå Oops, try again!" }, { type: 'mcq', points: 10, question: "What is the primary objective of the Ujjwala Yojana?", options: [ { id: 1, text: "Providing electricity", isCorrect: false }, { id: 2, text: "Building toilets", isCorrect: false }, { id: 3, text: "Providing clean cooking fuel (LPG)", isCorrect: true }, { id: 4, text: "Offering financial loans", isCorrect: false } ], feedbackCorrect: "‚úÖ That's right!", feedbackIncorrect: "‚ùå Not quite." }, { type: 'match', points: 15, question: "Match the feature with its description.", columns: { a: [ { id: 'm1', text: 'Ujjwala 2.0' }, { id: 'm2', text: 'Target Beneficiary' }, { id: 'm3', text: 'Financial Assistance' } ], b: [ { id: 'm1', text: 'Launched in 2021' }, { id: 'm2', text: 'Women from BPL families' }, { id: 'm3', text: '‚Çπ1600 for a new connection' } ] }, correctOrder: { m1: 'm1', m2: 'm2', m3: 'm3' } }, { type: 'mcq', points: 10, question: "Ujjwala 2.0 was launched in which year?", options: [ { id: 1, text: "2019", isCorrect: false }, { id: 2, text: "2020", isCorrect: false }, { id: 3, text: "2021", isCorrect: true }, { id: 4, text: "2022", isCorrect: false } ], feedbackCorrect: "‚úÖ Exactly!", feedbackIncorrect: "‚ùå The correct year is 2021." }, { type: 'mcq', points: 10, question: "Which ministry implements the PMUY scheme?", options: [ { id: 1, text: "Ministry of Finance", isCorrect: false }, { id: 2, text: "Ministry of Petroleum & Gas", isCorrect: true }, { id: 3, text: "Ministry of Women", isCorrect: false }, { id: 4, text: "Ministry of Rural Development", isCorrect: false } ], feedbackCorrect: "‚úÖ Correct!", feedbackIncorrect: "‚ùå It's the Ministry of Petroleum & Gas." } ],
    results: { title: "Game Complete!", scoreText: "Your Helper Score:", playAgain: "Play Again" },
    common: { skipVideo: "Skip Video", checkAnswer: "Check Answer", nextQuestion: "Next Question", nextStep: "Next Step" },
    postQuiz: { askApply: "Have you or your family applied for the Ujjwala Yojana?", yesButton: "Yes, we have", noButton: "No, tell me more", infoTitle: "How to Apply for PM Ujjwala Yojana", infoText: "You can apply both online and offline. Visit your nearest LPG distribution agency or a Common Service Center (CSC) with necessary documents like your Aadhaar card and ration card.", helplineText: "For more information, call the toll-free helpline:", helplineNumber: "1800-266-6696", websiteText: "Or visit the official website:", websiteLinkText: "Visit pmuy.gov.in", appliedMessageTitle: "That's Wonderful!", appliedMessageText: "Help spread the word so others can benefit too. Share this scheme with your friends and family!", shareButton: "Share Scheme" }
  },
  hi: {
    title: "ü™î ‡§â‡§ú‡•ç‡§ú‡•ç‡§µ‡§≤‡§æ ‡§ï‡•Ä ‡§ñ‡•Å‡§∂‡§π‡§æ‡§≤ ‡§∞‡§∏‡•ã‡§à ü™î",
    intro: { description: "‡§â‡§ú‡•ç‡§ú‡•ç‡§µ‡§≤‡§æ ‡§Ø‡•ã‡§ú‡§®‡§æ ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§ú‡§æ‡§®‡§®‡•á ‡§î‡§∞ ‡§Ø‡§π ‡§¶‡•á‡§ñ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ï‡§ø ‡§Ø‡§π ‡§Ü‡§™‡§ï‡•á ‡§ú‡•à‡§∏‡•á ‡§™‡§∞‡§ø‡§µ‡§æ‡§∞‡•ã‡§Ç ‡§ï‡•Ä ‡§ï‡•à‡§∏‡•á ‡§Æ‡§¶‡§¶ ‡§ï‡§∞‡§§‡•Ä ‡§π‡•à, ‡§è‡§ï ‡§Æ‡§ú‡•á‡§¶‡§æ‡§∞ ‡§ñ‡•á‡§≤ ‡§ñ‡•á‡§≤‡•á‡§Ç!", startButton: "‡§ñ‡•á‡§≤ ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§∞‡•á‡§Ç" },
    quizIntro: { title: "‡§™‡§π‡§≤‡§æ ‡§ö‡§∞‡§£: ‡§ú‡•ç‡§û‡§æ‡§® ‡§ö‡•Å‡§®‡•å‡§§‡•Ä!", instruction: "‡§®‡§Ø‡§æ ‡§ó‡•à‡§∏ ‡§∏‡§ø‡§≤‡•á‡§Ç‡§°‡§∞ ‡§Ö‡§®‡§≤‡•â‡§ï ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§á‡§® ‡§∏‡§µ‡§æ‡§≤‡•ã‡§Ç ‡§ï‡•á ‡§ú‡§µ‡§æ‡§¨ ‡§¶‡•á‡§Ç!" },
    game2: { instruction: "‡§Ü‡§™‡§®‡•á ‡§ï‡•ç‡§µ‡§ø‡§ú‡§º ‡§™‡§æ‡§∏ ‡§ï‡§∞ ‡§≤‡§ø‡§Ø‡§æ! ‡§Ö‡§¨, ‡§∞‡§∏‡•ã‡§à ‡§¨‡§¶‡§≤‡§§‡•á ‡§π‡•à‡§Ç‡•§ ‡§™‡•Å‡§∞‡§æ‡§®‡•á ‡§ö‡•Ç‡§≤‡•ç‡§π‡•á ‡§ï‡•ã ‡§¨‡§æ‡§π‡§∞ ‡§ñ‡•Ä‡§Ç‡§ö‡•á‡§Ç‡•§", instruction2: "‡§â‡§§‡•ç‡§§‡§Æ! ‡§Ö‡§¨ ‡§®‡§Ø‡§æ LPG ‡§∏‡§ø‡§≤‡•á‡§Ç‡§°‡§∞ ‡§≤‡•á ‡§Ü‡§ì‡•§", success: "‡§¶‡•á‡§ñ‡•ã! ‡§è‡§ï ‡§∏‡•ç‡§µ‡§ö‡•ç‡§õ ‡§î‡§∞ ‡§ñ‡•Å‡§∂‡§π‡§æ‡§≤ ‡§∞‡§∏‡•ã‡§à!" },
    questions: [ { type: 'mcq', points: 10, question: "PMUY ‡§Ø‡•ã‡§ú‡§®‡§æ ‡§ï‡§¨ ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡•Ä ‡§ó‡§à ‡§•‡•Ä?", options: [ { id: 1, text: "‡§Ö‡§ó‡§∏‡•ç‡§§ 2015", isCorrect: false }, { id: 2, text: "‡§Æ‡§à 2016", isCorrect: true }, { id: 3, text: "‡§ú‡§®‡§µ‡§∞‡•Ä 2017", isCorrect: false }, { id: 4, text: "‡§Ö‡§ï‡•ç‡§ü‡•Ç‡§¨‡§∞ 2018", isCorrect: false } ], feedbackCorrect: "‚úÖ ‡§∏‡§π‡•Ä!", feedbackIncorrect: "‚ùå ‡§ì‡§π, ‡§´‡§ø‡§∞ ‡§∏‡•á ‡§™‡•ç‡§∞‡§Ø‡§æ‡§∏ ‡§ï‡§∞‡•á‡§Ç!" }, { type: 'mcq', points: 10, question: "‡§â‡§ú‡•ç‡§ú‡•ç‡§µ‡§≤‡§æ ‡§Ø‡•ã‡§ú‡§®‡§æ ‡§ï‡§æ ‡§Æ‡•Å‡§ñ‡•ç‡§Ø ‡§â‡§¶‡•ç‡§¶‡•á‡§∂‡•ç‡§Ø ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•à?", options: [ { id: 1, text: "‡§¨‡§ø‡§ú‡§≤‡•Ä ‡§™‡•ç‡§∞‡§¶‡§æ‡§® ‡§ï‡§∞‡§®‡§æ", isCorrect: false }, { id: 2, text: "‡§∂‡•å‡§ö‡§æ‡§≤‡§Ø ‡§¨‡§®‡§æ‡§®‡§æ", isCorrect: false }, { id: 3, text: "‡§∏‡•ç‡§µ‡§ö‡•ç‡§õ ‡§∞‡§∏‡•ã‡§à ‡§ó‡•à‡§∏ (LPG) ‡§™‡•ç‡§∞‡§¶‡§æ‡§® ‡§ï‡§∞‡§®‡§æ", isCorrect: true }, { id: 4, text: "‡§µ‡§ø‡§§‡•ç‡§§‡•Ä‡§Ø ‡§ã‡§£ ‡§¶‡•á‡§®‡§æ", isCorrect: false } ], feedbackCorrect: "‚úÖ ‡§¨‡§ø‡§≤‡•ç‡§ï‡•Å‡§≤ ‡§∏‡§π‡•Ä!", feedbackIncorrect: "‚ùå ‡§Ø‡§π ‡§®‡§π‡•Ä‡§Ç‡•§" }, { type: 'match', points: 15, question: "‡§∏‡•Å‡§µ‡§ø‡§ß‡§æ ‡§ï‡§æ ‡§â‡§∏‡§ï‡•á ‡§µ‡§ø‡§µ‡§∞‡§£ ‡§∏‡•á ‡§Æ‡§ø‡§≤‡§æ‡§® ‡§ï‡§∞‡•á‡§Ç‡•§", columns: { a: [{ id: 'm1', text: '‡§â‡§ú‡•ç‡§ú‡•ç‡§µ‡§≤‡§æ 2.0' }, { id: 'm2', text: '‡§≤‡§æ‡§≠‡§æ‡§∞‡•ç‡§•‡•Ä' }, { id: 'm3', text: '‡§µ‡§ø‡§§‡•ç‡§§‡•Ä‡§Ø ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ' }], b: [{ id: 'm1', text: '2021 ‡§Æ‡•á‡§Ç ‡§≤‡•â‡§®‡•ç‡§ö' }, { id: 'm2', text: 'BPL ‡§™‡§∞‡§ø‡§µ‡§æ‡§∞‡•ã‡§Ç ‡§ï‡•Ä ‡§Æ‡§π‡§ø‡§≤‡§æ‡§è‡§Å' }, { id: 'm3', text: '‡§®‡§è ‡§ï‡§®‡•á‡§ï‡•ç‡§∂‡§® ‡§ï‡•á ‡§≤‡§ø‡§è ‚Çπ1600' }] }, correctOrder: { m1: 'm1', m2: 'm2', m3: 'm3' } }, { type: 'mcq', points: 10, question: "‡§â‡§ú‡•ç‡§ú‡•ç‡§µ‡§≤‡§æ 2.0 ‡§ï‡§ø‡§∏ ‡§µ‡§∞‡•ç‡§∑ ‡§∂‡•Å‡§∞‡•Ç ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§•‡§æ?", options: [ { id: 1, text: "2019", isCorrect: false }, { id: 2, text: "2020", isCorrect: false }, { id: 3, text: "2021", isCorrect: true }, { id: 4, text: "2022", isCorrect: false } ], feedbackCorrect: "‚úÖ ‡§¨‡§ø‡§≤‡•ç‡§ï‡•Å‡§≤!", feedbackIncorrect: "‚ùå ‡§∏‡§π‡•Ä ‡§µ‡§∞‡•ç‡§∑ 2021 ‡§π‡•à‡•§" }, { type: 'mcq', points: 10, question: "PMUY ‡§Ø‡•ã‡§ú‡§®‡§æ ‡§ï‡•å‡§® ‡§∏‡§æ ‡§Æ‡§Ç‡§§‡•ç‡§∞‡§æ‡§≤‡§Ø ‡§≤‡§æ‡§ó‡•Ç ‡§ï‡§∞‡§§‡§æ ‡§π‡•à?", options: [ { id: 1, text: "‡§µ‡§ø‡§§‡•ç‡§§ ‡§Æ‡§Ç‡§§‡•ç‡§∞‡§æ‡§≤‡§Ø", isCorrect: false }, { id: 2, text: "‡§™‡•á‡§ü‡•ç‡§∞‡•ã‡§≤‡§ø‡§Ø‡§Æ ‡§î‡§∞ ‡§ó‡•à‡§∏ ‡§Æ‡§Ç‡§§‡•ç‡§∞‡§æ‡§≤‡§Ø", isCorrect: true }, { id: 3, text: "‡§Æ‡§π‡§ø‡§≤‡§æ ‡§Æ‡§Ç‡§§‡•ç‡§∞‡§æ‡§≤‡§Ø", isCorrect: false }, { id: 4, text: "‡§ó‡•ç‡§∞‡§æ‡§Æ‡•Ä‡§£ ‡§µ‡§ø‡§ï‡§æ‡§∏ ‡§Æ‡§Ç‡§§‡•ç‡§∞‡§æ‡§≤‡§Ø", isCorrect: false } ], feedbackCorrect: "‚úÖ ‡§∏‡§π‡•Ä!", feedbackIncorrect: "‚ùå ‡§Ø‡§π ‡§™‡•á‡§ü‡•ç‡§∞‡•ã‡§≤‡§ø‡§Ø‡§Æ ‡§î‡§∞ ‡§ó‡•à‡§∏ ‡§Æ‡§Ç‡§§‡•ç‡§∞‡§æ‡§≤‡§Ø ‡§π‡•à‡•§" } ],
    results: { title: "‡§ñ‡•á‡§≤ ‡§∏‡§Æ‡§æ‡§™‡•ç‡§§!", scoreText: "‡§Ü‡§™‡§ï‡§æ ‡§∏‡§π‡§æ‡§Ø‡§ï ‡§∏‡•ç‡§ï‡•ã‡§∞:", playAgain: "‡§´‡§ø‡§∞ ‡§∏‡•á ‡§ñ‡•á‡§≤‡•á‡§Ç" },
    common: { skipVideo: "‡§µ‡•Ä‡§°‡§ø‡§Ø‡•ã ‡§õ‡•ã‡§°‡§º‡•á‡§Ç", checkAnswer: "‡§â‡§§‡•ç‡§§‡§∞ ‡§ú‡§æ‡§Ç‡§ö‡•á‡§Ç", nextQuestion: "‡§Ö‡§ó‡§≤‡§æ ‡§™‡•ç‡§∞‡§∂‡•ç‡§®", nextStep: "‡§Ö‡§ó‡§≤‡§æ ‡§ï‡§¶‡§Æ" },
    postQuiz: { askApply: "‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™‡§®‡•á ‡§Ø‡§æ ‡§Ü‡§™‡§ï‡•á ‡§™‡§∞‡§ø‡§µ‡§æ‡§∞ ‡§®‡•á ‡§â‡§ú‡•ç‡§ú‡•ç‡§µ‡§≤‡§æ ‡§Ø‡•ã‡§ú‡§®‡§æ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ü‡§µ‡•á‡§¶‡§® ‡§ï‡§ø‡§Ø‡§æ ‡§π‡•à?", yesButton: "‡§π‡§æ‡§Å, ‡§π‡§Æ‡§®‡•á ‡§ï‡§ø‡§Ø‡§æ ‡§π‡•à", noButton: "‡§®‡§π‡•Ä‡§Ç, ‡§Æ‡•Å‡§ù‡•á ‡§î‡§∞ ‡§¨‡§§‡§æ‡§è‡§Ç", infoTitle: "‡§™‡•Ä‡§è‡§Æ ‡§â‡§ú‡•ç‡§ú‡•ç‡§µ‡§≤‡§æ ‡§Ø‡•ã‡§ú‡§®‡§æ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ü‡§µ‡•á‡§¶‡§® ‡§ï‡•à‡§∏‡•á ‡§ï‡§∞‡•á‡§Ç", infoText: "‡§Ü‡§™ ‡§ë‡§®‡§≤‡§æ‡§á‡§® ‡§î‡§∞ ‡§ë‡§´‡§≤‡§æ‡§á‡§® ‡§¶‡•ã‡§®‡•ã‡§Ç ‡§§‡§∞‡•Ä‡§ï‡•ã‡§Ç ‡§∏‡•á ‡§Ü‡§µ‡•á‡§¶‡§® ‡§ï‡§∞ ‡§∏‡§ï‡§§‡•á ‡§π‡•à‡§Ç‡•§ ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï ‡§¶‡§∏‡•ç‡§§‡§æ‡§µ‡•á‡§ú‡•ã‡§Ç ‡§ú‡•à‡§∏‡•á ‡§Ü‡§ß‡§æ‡§∞ ‡§ï‡§æ‡§∞‡•ç‡§° ‡§î‡§∞ ‡§∞‡§æ‡§∂‡§® ‡§ï‡§æ‡§∞‡•ç‡§° ‡§ï‡•á ‡§∏‡§æ‡§• ‡§®‡§ø‡§ï‡§ü‡§§‡§Æ ‡§è‡§≤‡§™‡•Ä‡§ú‡•Ä ‡§µ‡§ø‡§§‡§∞‡§£ ‡§è‡§ú‡•á‡§Ç‡§∏‡•Ä ‡§Ø‡§æ ‡§è‡§ï ‡§ï‡•â‡§Æ‡§® ‡§∏‡§∞‡•ç‡§µ‡§ø‡§∏ ‡§∏‡•á‡§Ç‡§ü‡§∞ (CSC) ‡§™‡§∞ ‡§ú‡§æ‡§è‡§Ç‡•§", helplineText: "‡§Ö‡§ß‡§ø‡§ï ‡§ú‡§æ‡§®‡§ï‡§æ‡§∞‡•Ä ‡§ï‡•á ‡§≤‡§ø‡§è, ‡§ü‡•ã‡§≤-‡§´‡•ç‡§∞‡•Ä ‡§π‡•á‡§≤‡•ç‡§™‡§≤‡§æ‡§á‡§® ‡§™‡§∞ ‡§ï‡•â‡§≤ ‡§ï‡§∞‡•á‡§Ç:", helplineNumber: "1800-266-6696", websiteText: "‡§Ø‡§æ ‡§Ü‡§ß‡§ø‡§ï‡§æ‡§∞‡§ø‡§ï ‡§µ‡•á‡§¨‡§∏‡§æ‡§á‡§ü ‡§™‡§∞ ‡§ú‡§æ‡§è‡§Ç:", websiteLinkText: "pmuy.gov.in ‡§™‡§∞ ‡§ú‡§æ‡§è‡§Ç", appliedMessageTitle: "‡§Ø‡§π ‡§¨‡§π‡•Å‡§§ ‡§¨‡§¢‡§º‡§ø‡§Ø‡§æ ‡§π‡•à!", appliedMessageText: "‡§¶‡•Ç‡§∏‡§∞‡•ã‡§Ç ‡§ï‡•ã ‡§≠‡•Ä ‡§≤‡§æ‡§≠ ‡§Æ‡§ø‡§≤ ‡§∏‡§ï‡•á ‡§á‡§∏‡§ï‡•á ‡§≤‡§ø‡§è ‡§á‡§∏ ‡§Ø‡•ã‡§ú‡§®‡§æ ‡§ï‡•ã ‡§Ö‡§™‡§®‡•á ‡§¶‡•ã‡§∏‡•ç‡§§‡•ã‡§Ç ‡§î‡§∞ ‡§™‡§∞‡§ø‡§µ‡§æ‡§∞ ‡§ï‡•á ‡§∏‡§æ‡§• ‡§∏‡§æ‡§ù‡§æ ‡§ï‡§∞‡•á‡§Ç‡•§", shareButton: "‡§Ø‡•ã‡§ú‡§®‡§æ ‡§∏‡§æ‡§ù‡§æ ‡§ï‡§∞‡•á‡§Ç" }
  },
  ta: {
    title: "ü™î ‡Æâ‡Æú‡Øç‡Æµ‡Æ≤‡Ææ‡Æµ‡Æø‡Æ©‡Øç ‡ÆÆ‡Æï‡Æø‡Æ¥‡Øç‡Æö‡Øç‡Æö‡Æø‡ÆØ‡Ææ‡Æ© ‡Æö‡ÆÆ‡Øà‡ÆØ‡Æ≤‡Æ±‡Øà ü™î",
    intro: { description: "‡Æâ‡Æú‡Øç‡Æµ‡Ææ‡Æ≤‡Ææ ‡Æ§‡Æø‡Æü‡Øç‡Æü‡ÆÆ‡Øç ‡Æ™‡Æ±‡Øç‡Æ±‡Æø ‡ÆÖ‡Æ±‡Æø‡ÆØ‡Æµ‡ØÅ‡ÆÆ‡Øç, ‡ÆÖ‡Æ§‡ØÅ ‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡Æï‡ØÅ‡Æü‡ØÅ‡ÆÆ‡Øç‡Æ™‡Æ§‡Øç‡Æ§‡Æø‡Æ±‡Øç‡Æï‡ØÅ ‡Æé‡Æ™‡Øç‡Æ™‡Æü‡Æø ‡Æâ‡Æ§‡Æµ‡ØÅ‡Æï‡Æø‡Æ±‡Æ§‡ØÅ ‡Æé‡Æ©‡Øç‡Æ™‡Æ§‡Øà‡Æ™‡Øç ‡Æ™‡Ææ‡Æ∞‡Øç‡Æï‡Øç‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç ‡Æí‡Æ∞‡ØÅ ‡Æµ‡Øá‡Æü‡Æø‡Æï‡Øç‡Æï‡Øà‡ÆØ‡Ææ‡Æ© ‡Æµ‡Æø‡Æ≥‡Øà‡ÆØ‡Ææ‡Æü‡Øç‡Æü‡Øà ‡Æµ‡Æø‡Æ≥‡Øà‡ÆØ‡Ææ‡Æü‡ØÅ‡Æô‡Øç‡Æï‡Æ≥‡Øç!", startButton: "‡Æµ‡Æø‡Æ≥‡Øà‡ÆØ‡Ææ‡Æü‡Øç‡Æü‡Øà‡Æ§‡Øç ‡Æ§‡Øä‡Æü‡Æô‡Øç‡Æï‡ØÅ" },
    quizIntro: { title: "‡Æ™‡Æü‡Æø 1: ‡ÆÖ‡Æ±‡Æø‡Æµ‡ØÅ‡Æö‡Øç ‡Æö‡Æµ‡Ææ‡Æ≤‡Øç!", instruction: "‡Æ™‡ØÅ‡Æ§‡Æø‡ÆØ ‡Æé‡Æ∞‡Æø‡Æµ‡Ææ‡ÆØ‡ØÅ ‡Æö‡Æø‡Æ≤‡Æø‡Æ£‡Øç‡Æü‡Æ∞‡Øà‡Æ§‡Øç ‡Æ§‡Æø‡Æ±‡Æï‡Øç‡Æï ‡Æá‡Æ®‡Øç‡Æ§‡Æï‡Øç ‡Æï‡Øá‡Æ≥‡Øç‡Æµ‡Æø‡Æï‡Æ≥‡ØÅ‡Æï‡Øç‡Æï‡ØÅ‡Æ™‡Øç ‡Æ™‡Æ§‡Æø‡Æ≤‡Æ≥‡Æø‡Æï‡Øç‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç!" },
    game2: { instruction: "‡Æ®‡ØÄ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡Æµ‡Æø‡Æ©‡Ææ‡Æü‡Æø ‡Æµ‡Æø‡Æ©‡Ææ‡Æµ‡Æø‡Æ≤‡Øç ‡Æ§‡Øá‡Æ∞‡Øç‡Æö‡Øç‡Æö‡Æø ‡Æ™‡ØÜ‡Æ±‡Øç‡Æ±‡ØÄ‡Æ∞‡Øç‡Æï‡Æ≥‡Øç! ‡Æá‡Æ™‡Øç‡Æ™‡Øã‡Æ§‡ØÅ, ‡Æö‡ÆÆ‡Øà‡ÆØ‡Æ≤‡Æ±‡Øà‡ÆØ‡Øà ‡ÆÆ‡Ææ‡Æ±‡Øç‡Æ±‡ØÅ‡Æµ‡Øã‡ÆÆ‡Øç. ‡Æ™‡Æ¥‡Øà‡ÆØ ‡ÆÖ‡Æü‡ØÅ‡Æ™‡Øç‡Æ™‡Øà ‡Æµ‡ØÜ‡Æ≥‡Æø‡ÆØ‡Øá ‡Æá‡Æ¥‡ØÅ‡Æï‡Øç‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç.", instruction2: "‡Æ®‡Æ©‡Øç‡Æ±‡ØÅ! ‡Æá‡Æ™‡Øç‡Æ™‡Øã‡Æ§‡ØÅ ‡Æ™‡ØÅ‡Æ§‡Æø‡ÆØ LPG ‡Æö‡Æø‡Æ≤‡Æø‡Æ£‡Øç‡Æü‡Æ∞‡Øà‡Æï‡Øç ‡Æï‡Øä‡Æ£‡Øç‡Æü‡ØÅ ‡Æµ‡Ææ‡Æ∞‡ØÅ‡Æô‡Øç‡Æï‡Æ≥‡Øç.", success: "‡Æ™‡Ææ‡Æ∞‡ØÅ‡Æô‡Øç‡Æï‡Æ≥‡Øç! ‡Æí‡Æ∞‡ØÅ ‡Æö‡ØÅ‡Æ§‡Øç‡Æ§‡ÆÆ‡Ææ‡Æ© ‡ÆÆ‡Æ±‡Øç‡Æ±‡ØÅ‡ÆÆ‡Øç ‡ÆÆ‡Æï‡Æø‡Æ¥‡Øç‡Æö‡Øç‡Æö‡Æø‡ÆØ‡Ææ‡Æ© ‡Æö‡ÆÆ‡Øà‡ÆØ‡Æ≤‡Æ±‡Øà!" },
    questions: [ { type: 'mcq', points: 10, question: "PMUY ‡Æ§‡Æø‡Æü‡Øç‡Æü‡ÆÆ‡Øç ‡Æé‡Æ™‡Øç‡Æ™‡Øã‡Æ§‡ØÅ ‡Æ§‡Øä‡Æü‡Æô‡Øç‡Æï‡Æ™‡Øç‡Æ™‡Æü‡Øç‡Æü‡Æ§‡ØÅ?", options: [ { id: 1, text: "‡ÆÜ‡Æï‡Æ∏‡Øç‡Æü‡Øç 2015", isCorrect: false }, { id: 2, text: "‡ÆÆ‡Øá 2016", isCorrect: true }, { id: 3, text: "‡Æú‡Æ©‡Æµ‡Æ∞‡Æø 2017", isCorrect: false }, { id: 4, text: "‡ÆÖ‡Æï‡Øç‡Æü‡Øã‡Æ™‡Æ∞‡Øç 2018", isCorrect: false } ], feedbackCorrect: "‚úÖ ‡Æö‡Æ∞‡Æø!", feedbackIncorrect: "‚ùå ‡ÆÆ‡ØÄ‡Æ£‡Øç‡Æü‡ØÅ‡ÆÆ‡Øç ‡ÆÆ‡ØÅ‡ÆØ‡Æ±‡Øç‡Æö‡Æø‡Æï‡Øç‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç!" }, { type: 'mcq', points: 10, question: "‡Æâ‡Æú‡Øç‡Æµ‡Ææ‡Æ≤‡Ææ ‡ÆØ‡Øã‡Æú‡Æ©‡Ææ‡Æµ‡Æø‡Æ©‡Øç ‡ÆÆ‡ØÅ‡Æ§‡Æ©‡Øç‡ÆÆ‡Øà ‡Æ®‡Øã‡Æï‡Øç‡Æï‡ÆÆ‡Øç ‡Æé‡Æ©‡Øç‡Æ©?", options: [ { id: 1, text: "‡ÆÆ‡Æø‡Æ©‡Øç‡Æö‡Ææ‡Æ∞‡ÆÆ‡Øç ‡Æµ‡Æ¥‡Æô‡Øç‡Æï‡ØÅ‡Æ§‡Æ≤‡Øç", isCorrect: false }, { id: 2, text: "‡Æï‡Æ¥‡Æø‡Æ™‡Øç‡Æ™‡Æ±‡Øà ‡Æï‡Æü‡Øç‡Æü‡ØÅ‡Æ§‡Æ≤‡Øç", isCorrect: false }, { id: 3, text: "‡Æö‡ØÅ‡Æ§‡Øç‡Æ§‡ÆÆ‡Ææ‡Æ© ‡Æö‡ÆÆ‡Øà‡ÆØ‡Æ≤‡Øç ‡Æé‡Æ∞‡Æø‡Æµ‡Ææ‡ÆØ‡ØÅ (LPG) ‡Æµ‡Æ¥‡Æô‡Øç‡Æï‡ØÅ‡Æ§‡Æ≤‡Øç", isCorrect: true }, { id: 4, text: "‡Æ®‡Æø‡Æ§‡Æø‡Æï‡Øç ‡Æï‡Æü‡Æ©‡Øç‡Æï‡Æ≥‡Øç ‡Æµ‡Æ¥‡Æô‡Øç‡Æï‡ØÅ‡Æ§‡Æ≤‡Øç", isCorrect: false } ], feedbackCorrect: "‚úÖ ‡Æö‡Æ∞‡Æø!", feedbackIncorrect: "‚ùå ‡ÆÖ‡Æ§‡ØÅ ‡Æá‡Æ≤‡Øç‡Æ≤‡Øà." }, { type: 'match', points: 15, question: "‡ÆÖ‡ÆÆ‡Øç‡Æö‡Æ§‡Øç‡Æ§‡Øà ‡ÆÖ‡Æ§‡Æ©‡Øç ‡Æµ‡Æø‡Æ≥‡Æï‡Øç‡Æï‡Æ§‡Øç‡Æ§‡ØÅ‡Æü‡Æ©‡Øç ‡Æ™‡Øä‡Æ∞‡ØÅ‡Æ§‡Øç‡Æ§‡Æµ‡ØÅ‡ÆÆ‡Øç.", columns: { a: [{ id: 'm1', text: '‡Æâ‡Æú‡Øç‡Æµ‡Ææ‡Æ≤‡Ææ 2.0' }, { id: 'm2', text: '‡Æ™‡ÆØ‡Æ©‡Ææ‡Æ≥‡Æø' }, { id: 'm3', text: '‡Æ®‡Æø‡Æ§‡Æø ‡Æâ‡Æ§‡Æµ‡Æø' }], b: [{ id: 'm1', text: '2021 ‡Æá‡Æ≤‡Øç ‡Æ§‡Øä‡Æü‡Æô‡Øç‡Æï‡Æ™‡Øç‡Æ™‡Æü‡Øç‡Æü‡Æ§‡ØÅ' }, { id: 'm2', text: 'BPL ‡Æï‡ØÅ‡Æü‡ØÅ‡ÆÆ‡Øç‡Æ™‡Æ™‡Øç ‡Æ™‡ØÜ‡Æ£‡Øç‡Æï‡Æ≥‡Øç' }, { id: 'm3', text: '‡Æ™‡ØÅ‡Æ§‡Æø‡ÆØ ‡Æá‡Æ£‡Øà‡Æ™‡Øç‡Æ™‡ØÅ‡Æï‡Øç‡Æï‡ØÅ ‚Çπ1600' }] }, correctOrder: { m1: 'm1', m2: 'm2', m3: 'm3' } }, { type: 'mcq', points: 10, question: "‡Æâ‡Æú‡Øç‡Æµ‡Ææ‡Æ≤‡Ææ 2.0 ‡Æé‡Æ®‡Øç‡Æ§ ‡ÆÜ‡Æ£‡Øç‡Æü‡Æø‡Æ≤‡Øç ‡Æ§‡Øä‡Æü‡Æô‡Øç‡Æï‡Æ™‡Øç‡Æ™‡Æü‡Øç‡Æü‡Æ§‡ØÅ?", options: [ { id: 1, text: "2019", isCorrect: false }, { id: 2, text: "2020", isCorrect: false }, { id: 3, text: "2021", isCorrect: true }, { id: 4, text: "2022", isCorrect: false } ], feedbackCorrect: "‚úÖ ‡Æö‡Æ∞‡Æø!", feedbackIncorrect: "‚ùå ‡Æö‡Æ∞‡Æø‡ÆØ‡Ææ‡Æ© ‡ÆÜ‡Æ£‡Øç‡Æü‡ØÅ 2021." }, { type: 'mcq', points: 10, question: "PMUY ‡Æ§‡Æø‡Æü‡Øç‡Æü‡Æ§‡Øç‡Æ§‡Øà ‡Æé‡Æ®‡Øç‡Æ§ ‡ÆÖ‡ÆÆ‡Øà‡Æö‡Øç‡Æö‡Æï‡ÆÆ‡Øç ‡Æö‡ØÜ‡ÆØ‡Æ≤‡Øç‡Æ™‡Æü‡ØÅ‡Æ§‡Øç‡Æ§‡ØÅ‡Æï‡Æø‡Æ±‡Æ§‡ØÅ?", options: [ { id: 1, text: "‡Æ®‡Æø‡Æ§‡Æø ‡ÆÖ‡ÆÆ‡Øà‡Æö‡Øç‡Æö‡Æï‡ÆÆ‡Øç", isCorrect: false }, { id: 2, text: "‡Æ™‡ØÜ‡Æü‡Øç‡Æ∞‡Øã‡Æ≤‡Æø‡ÆØ‡ÆÆ‡Øç ‡ÆÆ‡Æ±‡Øç‡Æ±‡ØÅ‡ÆÆ‡Øç ‡Æé‡Æ∞‡Æø‡Æµ‡Ææ‡ÆØ‡ØÅ ‡ÆÖ‡ÆÆ‡Øà‡Æö‡Øç‡Æö‡Æï‡ÆÆ‡Øç", isCorrect: true }, { id: 3, text: "‡Æ™‡ØÜ‡Æ£‡Øç‡Æï‡Æ≥‡Øç ‡ÆÖ‡ÆÆ‡Øà‡Æö‡Øç‡Æö‡Æï‡ÆÆ‡Øç", isCorrect: false }, { id: 4, text: "‡Æä‡Æ∞‡Æï ‡Æµ‡Æ≥‡Æ∞‡Øç‡Æö‡Øç‡Æö‡Æø ‡ÆÖ‡ÆÆ‡Øà‡Æö‡Øç‡Æö‡Æï‡ÆÆ‡Øç", isCorrect: false } ], feedbackCorrect: "‚úÖ ‡Æö‡Æ∞‡Æø!", feedbackIncorrect: "‚ùå ‡Æá‡Æ§‡ØÅ ‡Æ™‡ØÜ‡Æü‡Øç‡Æ∞‡Øã‡Æ≤‡Æø‡ÆØ‡ÆÆ‡Øç ‡ÆÆ‡Æ±‡Øç‡Æ±‡ØÅ‡ÆÆ‡Øç ‡Æé‡Æ∞‡Æø‡Æµ‡Ææ‡ÆØ‡ØÅ ‡ÆÖ‡ÆÆ‡Øà‡Æö‡Øç‡Æö‡Æï‡ÆÆ‡Øç." } ],
    results: { title: "‡Æµ‡Æø‡Æ≥‡Øà‡ÆØ‡Ææ‡Æü‡Øç‡Æü‡ØÅ ‡ÆÆ‡ØÅ‡Æü‡Æø‡Æ®‡Øç‡Æ§‡Æ§‡ØÅ!", scoreText: "‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡Æâ‡Æ§‡Æµ‡Æø‡ÆØ‡Ææ‡Æ≥‡Æ∞‡Øç ‡ÆÆ‡Æ§‡Æø‡Æ™‡Øç‡Æ™‡ØÜ‡Æ£‡Øç:", playAgain: "‡ÆÆ‡ØÄ‡Æ£‡Øç‡Æü‡ØÅ‡ÆÆ‡Øç ‡Æµ‡Æø‡Æ≥‡Øà‡ÆØ‡Ææ‡Æü‡ØÅ" },
    common: { skipVideo: "‡Æµ‡ØÄ‡Æü‡Æø‡ÆØ‡Øã‡Æµ‡Øà‡Æ§‡Øç ‡Æ§‡Æµ‡Æø‡Æ∞‡Øç", checkAnswer: "‡Æµ‡Æø‡Æü‡Øà‡ÆØ‡Øà‡Æö‡Øç ‡Æö‡Æ∞‡Æø‡Æ™‡Ææ‡Æ∞‡Øç‡Æï‡Øç‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç", nextQuestion: "‡ÆÖ‡Æü‡ØÅ‡Æ§‡Øç‡Æ§ ‡Æï‡Øá‡Æ≥‡Øç‡Æµ‡Æø", nextStep: "‡ÆÖ‡Æü‡ØÅ‡Æ§‡Øç‡Æ§ ‡Æ™‡Æü‡Æø" },
    postQuiz: { askApply: "‡Æ®‡ØÄ‡Æô‡Øç‡Æï‡Æ≥‡Øã ‡ÆÖ‡Æ≤‡Øç‡Æ≤‡Æ§‡ØÅ ‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡Æï‡ØÅ‡Æü‡ØÅ‡ÆÆ‡Øç‡Æ™‡Æ§‡Øç‡Æ§‡Æø‡Æ©‡Æ∞‡Øã ‡Æâ‡Æú‡Øç‡Æµ‡Ææ‡Æ≤‡Ææ ‡ÆØ‡Øã‡Æú‡Æ©‡Ææ ‡Æ§‡Æø‡Æü‡Øç‡Æü‡Æ§‡Øç‡Æ§‡Æø‡Æ±‡Øç‡Æï‡ØÅ ‡Æµ‡Æø‡Æ£‡Øç‡Æ£‡Æ™‡Øç‡Æ™‡Æø‡Æ§‡Øç‡Æ§‡ØÅ‡Æ≥‡Øç‡Æ≥‡ØÄ‡Æ∞‡Øç‡Æï‡Æ≥‡Ææ?", yesButton: "‡ÆÜ‡ÆÆ‡Øç, ‡Æö‡ØÜ‡ÆØ‡Øç‡Æ§‡ØÅ‡Æ≥‡Øç‡Æ≥‡Øã‡ÆÆ‡Øç", noButton: "‡Æá‡Æ≤‡Øç‡Æ≤‡Øà, ‡ÆÆ‡Øá‡Æ≤‡ØÅ‡ÆÆ‡Øç ‡Æï‡ØÇ‡Æ±‡ØÅ‡Æô‡Øç‡Æï‡Æ≥‡Øç", infoTitle: "‡Æ™‡Æø‡Æé‡ÆÆ‡Øç ‡Æâ‡Æú‡Øç‡Æµ‡Ææ‡Æ≤‡Ææ ‡ÆØ‡Øã‡Æú‡Æ©‡Ææ‡Æµ‡ØÅ‡Æï‡Øç‡Æï‡ØÅ ‡Æé‡Æ™‡Øç‡Æ™‡Æü‡Æø ‡Æµ‡Æø‡Æ£‡Øç‡Æ£‡Æ™‡Øç‡Æ™‡Æø‡Æ™‡Øç‡Æ™‡Æ§‡ØÅ", infoText: "‡Æ®‡ØÄ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡ÆÜ‡Æ©‡Øç‡Æ≤‡Øà‡Æ©‡Øç ‡ÆÆ‡Æ±‡Øç‡Æ±‡ØÅ‡ÆÆ‡Øç ‡ÆÜ‡ÆÉ‡Æ™‡Øç‡Æ≤‡Øà‡Æ©‡Øç ‡Æá‡Æ∞‡Æ£‡Øç‡Æü‡Æø‡Æ≤‡ØÅ‡ÆÆ‡Øç ‡Æµ‡Æø‡Æ£‡Øç‡Æ£‡Æ™‡Øç‡Æ™‡Æø‡Æï‡Øç‡Æï‡Æ≤‡Ææ‡ÆÆ‡Øç. ‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡ÆÜ‡Æ§‡Ææ‡Æ∞‡Øç ‡ÆÖ‡Æü‡Øç‡Æü‡Øà ‡ÆÆ‡Æ±‡Øç‡Æ±‡ØÅ‡ÆÆ‡Øç ‡Æ∞‡Øá‡Æ∑‡Æ©‡Øç ‡Æï‡Ææ‡Æ∞‡Øç‡Æü‡ØÅ ‡Æ™‡Øã‡Æ©‡Øç‡Æ± ‡Æ§‡Øá‡Æµ‡Øà‡ÆØ‡Ææ‡Æ© ‡ÆÜ‡Æµ‡Æ£‡Æô‡Øç‡Æï‡Æ≥‡ØÅ‡Æü‡Æ©‡Øç ‡ÆÖ‡Æ∞‡ØÅ‡Æï‡Æø‡Æ≤‡ØÅ‡Æ≥‡Øç‡Æ≥ ‡Æé‡Æ≤‡Øç‡Æ™‡Æø‡Æú‡Æø ‡Æµ‡Æø‡Æ®‡Æø‡ÆØ‡Øã‡Æï ‡Æ®‡Æø‡Æ±‡ØÅ‡Æµ‡Æ©‡ÆÆ‡Øç ‡ÆÖ‡Æ≤‡Øç‡Æ≤‡Æ§‡ØÅ ‡Æ™‡Øä‡Æ§‡ØÅ ‡Æö‡Øá‡Æµ‡Øà ‡ÆÆ‡Øà‡ÆØ‡Æ§‡Øç‡Æ§‡Æø‡Æ±‡Øç‡Æï‡ØÅ (CSC) ‡Æö‡ØÜ‡Æ≤‡Øç‡Æ≤‡Æµ‡ØÅ‡ÆÆ‡Øç.", helplineText: "‡ÆÆ‡Øá‡Æ≤‡ØÅ‡ÆÆ‡Øç ‡Æ§‡Æï‡Æµ‡Æ≤‡ØÅ‡Æï‡Øç‡Æï‡ØÅ, ‡Æá‡Æ≤‡Æµ‡Æö ‡Æâ‡Æ§‡Æµ‡Æø ‡Æé‡Æ£‡Øç‡Æ£‡Øà ‡ÆÖ‡Æ¥‡Øà‡Æï‡Øç‡Æï‡Æµ‡ØÅ‡ÆÆ‡Øç:", helplineNumber: "1800-266-6696", websiteText: "‡ÆÖ‡Æ≤‡Øç‡Æ≤‡Æ§‡ØÅ ‡ÆÖ‡Æ§‡Æø‡Æï‡Ææ‡Æ∞‡Æ™‡Øç‡Æ™‡ØÇ‡Æ∞‡Øç‡Æµ ‡Æµ‡Æ≤‡Øà‡Æ§‡Øç‡Æ§‡Æ≥‡Æ§‡Øç‡Æ§‡Øà‡Æ™‡Øç ‡Æ™‡Ææ‡Æ∞‡Øç‡Æµ‡Øà‡ÆØ‡Æø‡Æü‡Æµ‡ØÅ‡ÆÆ‡Øç:", websiteLinkText: "pmuy.gov.in ‡Æê‡Æ™‡Øç ‡Æ™‡Ææ‡Æ∞‡Øç‡Æµ‡Øà‡ÆØ‡Æø‡Æü‡Æµ‡ØÅ‡ÆÆ‡Øç", appliedMessageTitle: "‡ÆÖ‡Æ±‡Øç‡Æ™‡ØÅ‡Æ§‡ÆÆ‡Øç!", appliedMessageText: "‡ÆÆ‡Æ±‡Øç‡Æ±‡Æµ‡Æ∞‡Øç‡Æï‡Æ≥‡ØÅ‡ÆÆ‡Øç ‡Æ™‡ÆØ‡Æ©‡Æü‡Øà‡ÆØ ‡Æá‡Æ®‡Øç‡Æ§‡Æ§‡Øç ‡Æ§‡Æø‡Æü‡Øç‡Æü‡Æ§‡Øç‡Æ§‡Øà ‡Æâ‡Æô‡Øç‡Æï‡Æ≥‡Øç ‡Æ®‡Æ£‡Øç‡Æ™‡Æ∞‡Øç‡Æï‡Æ≥‡Øç ‡ÆÆ‡Æ±‡Øç‡Æ±‡ØÅ‡ÆÆ‡Øç ‡Æï‡ØÅ‡Æü‡ØÅ‡ÆÆ‡Øç‡Æ™‡Æ§‡Øç‡Æ§‡Æø‡Æ©‡Æ∞‡ØÅ‡Æü‡Æ©‡Øç ‡Æ™‡Æï‡Æø‡Æ∞‡Øç‡Æ®‡Øç‡Æ§‡ØÅ ‡Æï‡Øä‡Æ≥‡Øç‡Æ≥‡ØÅ‡Æô‡Øç‡Æï‡Æ≥‡Øç.", shareButton: "‡Æ§‡Æø‡Æü‡Øç‡Æü‡Æ§‡Øç‡Æ§‡Øà‡Æ™‡Øç ‡Æ™‡Æï‡Æø‡Æ∞‡Æµ‡ØÅ‡ÆÆ‡Øç" }
  },
  te: {
    title: "ü™î ‡∞â‡∞ú‡±ç‡∞µ‡∞≤ ‡∞Ø‡±ä‡∞ï‡±ç‡∞ï ‡∞∏‡∞Ç‡∞§‡±ã‡∞∑‡∞ï‡∞∞‡∞Æ‡±à‡∞® ‡∞µ‡∞Ç‡∞ü‡∞ó‡∞¶‡∞ø ü™î",
    intro: { description: "‡∞â‡∞ú‡±ç‡∞µ‡∞≤ ‡∞Ø‡±ã‡∞ú‡∞® ‡∞ó‡±Å‡∞∞‡∞ø‡∞Ç‡∞ö‡∞ø ‡∞§‡±Ü‡∞≤‡±Å‡∞∏‡±Å‡∞ï‡±ã‡∞µ‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞Ö‡∞¶‡∞ø ‡∞Æ‡±Ä‡∞≤‡∞æ‡∞Ç‡∞ü‡∞ø ‡∞ï‡±Å‡∞ü‡±Å‡∞Ç‡∞¨‡∞æ‡∞≤‡∞ï‡±Å ‡∞é‡∞≤‡∞æ ‡∞∏‡∞π‡∞æ‡∞Ø‡∞™‡∞°‡±Å‡∞§‡±Å‡∞Ç‡∞¶‡±ã ‡∞ö‡±Ç‡∞°‡∞ü‡∞æ‡∞®‡∞ø‡∞ï‡∞ø ‡∞í‡∞ï ‡∞∏‡∞∞‡∞¶‡∞æ ‡∞Ü‡∞ü ‡∞Ü‡∞°‡∞Ç‡∞°‡∞ø!", startButton: "‡∞Ü‡∞ü ‡∞™‡±ç‡∞∞‡∞æ‡∞∞‡∞Ç‡∞≠‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø" },
    quizIntro: { title: "‡∞¶‡∞∂ 1: ‡∞ú‡±ç‡∞û‡∞æ‡∞® ‡∞∏‡∞µ‡∞æ‡∞≤‡±Å!", instruction: "‡∞ï‡±ä‡∞§‡±ç‡∞§ ‡∞ó‡±ç‡∞Ø‡∞æ‡∞∏‡±ç ‡∞∏‡∞ø‡∞≤‡∞ø‡∞Ç‡∞°‡∞∞‡±ç‚Äå‡∞®‡±Å ‡∞Ö‡∞®‡±ç‚Äå‡∞≤‡∞æ‡∞ï‡±ç ‡∞ö‡±á‡∞Ø‡∞°‡∞æ‡∞®‡∞ø‡∞ï‡∞ø ‡∞à ‡∞™‡±ç‡∞∞‡∞∂‡±ç‡∞®‡∞≤‡∞ï‡±Å ‡∞∏‡∞Æ‡∞æ‡∞ß‡∞æ‡∞®‡∞Ç ‡∞á‡∞µ‡±ç‡∞µ‡∞Ç‡∞°‡∞ø!" },
    game2: { instruction: "‡∞Æ‡±Ä‡∞∞‡±Å ‡∞ï‡±ç‡∞µ‡∞ø‡∞ú‡±ç‚Äå‡∞≤‡±ã ‡∞â‡∞§‡±ç‡∞§‡±Ä‡∞∞‡±ç‡∞£‡±Å‡∞≤‡∞Ø‡±ç‡∞Ø‡∞æ‡∞∞‡±Å! ‡∞á‡∞™‡±ç‡∞™‡±Å‡∞°‡±Å, ‡∞µ‡∞Ç‡∞ü‡∞ó‡∞¶‡∞ø‡∞®‡∞ø ‡∞Æ‡∞æ‡∞∞‡±Å‡∞¶‡±ç‡∞¶‡∞æ‡∞Ç. ‡∞™‡∞æ‡∞§ ‡∞∏‡±ç‡∞ü‡∞µ‡±ç‚Äå‡∞®‡±Å ‡∞¨‡∞Ø‡∞ü‡∞ï‡±Å ‡∞≤‡∞æ‡∞ó‡∞Ç‡∞°‡∞ø.", instruction2: "‡∞¨‡∞æ‡∞ó‡∞æ ‡∞ö‡±á‡∞∏‡∞æ‡∞∞‡±Å! ‡∞á‡∞™‡±ç‡∞™‡±Å‡∞°‡±Å ‡∞ï‡±ä‡∞§‡±ç‡∞§ LPG ‡∞∏‡∞ø‡∞≤‡∞ø‡∞Ç‡∞°‡∞∞‡±ç‚Äå‡∞®‡±Å ‡∞§‡±Ä‡∞∏‡±Å‡∞ï‡±Å‡∞∞‡∞Ç‡∞°‡∞ø.", success: "‡∞ö‡±Ç‡∞°‡∞Ç‡∞°‡∞ø! ‡∞í‡∞ï ‡∞∂‡±Å‡∞≠‡±ç‡∞∞‡∞Æ‡±à‡∞® ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞∏‡∞Ç‡∞§‡±ã‡∞∑‡∞ï‡∞∞‡∞Æ‡±à‡∞® ‡∞µ‡∞Ç‡∞ü‡∞ó‡∞¶‡∞ø!" },
    questions: [ { type: 'mcq', points: 10, question: "PMUY ‡∞™‡∞•‡∞ï‡∞Ç ‡∞é‡∞™‡±ç‡∞™‡±Å‡∞°‡±Å ‡∞™‡±ç‡∞∞‡∞æ‡∞∞‡∞Ç‡∞≠‡∞ø‡∞Ç‡∞ö‡∞¨‡∞°‡∞ø‡∞Ç‡∞¶‡∞ø?", options: [ { id: 1, text: "‡∞Ü‡∞ó‡∞∏‡±ç‡∞ü‡±Å 2015", isCorrect: false }, { id: 2, text: "‡∞Æ‡±á 2016", isCorrect: true }, { id: 3, text: "‡∞ú‡∞®‡∞µ‡∞∞‡∞ø 2017", isCorrect: false }, { id: 4, text: "‡∞Ö‡∞ï‡±ç‡∞ü‡±ã‡∞¨‡∞∞‡±ç 2018", isCorrect: false } ], feedbackCorrect: "‚úÖ ‡∞∏‡∞∞‡∞ø‡∞Ø‡±à‡∞®‡∞¶‡∞ø!", feedbackIncorrect: "‚ùå ‡∞ì‡∞π‡±ç, ‡∞Æ‡∞≥‡±ç‡∞≥‡±Ä ‡∞™‡±ç‡∞∞‡∞Ø‡∞§‡±ç‡∞®‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø!" }, { type: 'mcq', points: 10, question: "‡∞â‡∞ú‡±ç‡∞µ‡∞≤ ‡∞Ø‡±ã‡∞ú‡∞® ‡∞Ø‡±ä‡∞ï‡±ç‡∞ï ‡∞™‡±ç‡∞∞‡∞æ‡∞•‡∞Æ‡∞ø‡∞ï ‡∞≤‡∞ï‡±ç‡∞∑‡±ç‡∞Ø‡∞Ç ‡∞è‡∞Æ‡∞ø‡∞ü‡∞ø?", options: [ { id: 1, text: "‡∞µ‡∞ø‡∞¶‡±ç‡∞Ø‡±Å‡∞§‡±ç ‡∞Ö‡∞Ç‡∞¶‡∞ø‡∞Ç‡∞ö‡∞°‡∞Ç", isCorrect: false }, { id: 2, text: "‡∞Æ‡∞∞‡±Å‡∞ó‡±Å‡∞¶‡±ä‡∞°‡±ç‡∞≤‡±Å ‡∞®‡∞ø‡∞∞‡±ç‡∞Æ‡∞ø‡∞Ç‡∞ö‡∞°‡∞Ç", isCorrect: false }, { id: 3, text: "‡∞∏‡±ç‡∞µ‡∞ö‡±ç‡∞õ‡∞Æ‡±à‡∞® ‡∞µ‡∞Ç‡∞ü ‡∞á‡∞Ç‡∞ß‡∞®‡∞Ç (LPG) ‡∞Ö‡∞Ç‡∞¶‡∞ø‡∞Ç‡∞ö‡∞°‡∞Ç", isCorrect: true }, { id: 4, text: "‡∞Ü‡∞∞‡±ç‡∞•‡∞ø‡∞ï ‡∞∞‡±Å‡∞£‡∞æ‡∞≤‡±Å ‡∞Ö‡∞Ç‡∞¶‡∞ø‡∞Ç‡∞ö‡∞°‡∞Ç", isCorrect: false } ], feedbackCorrect: "‚úÖ ‡∞∏‡∞∞‡∞ø‡∞Ø‡±à‡∞®‡∞¶‡∞ø!", feedbackIncorrect: "‚ùå ‡∞Ö‡∞¶‡∞ø ‡∞ï‡∞æ‡∞¶‡±Å." }, { type: 'match', points: 15, question: "‡∞≤‡∞ï‡±ç‡∞∑‡∞£‡∞æ‡∞®‡±ç‡∞®‡∞ø ‡∞¶‡∞æ‡∞®‡∞ø ‡∞µ‡∞ø‡∞µ‡∞∞‡∞£‡∞§‡±ã ‡∞∏‡∞∞‡∞ø‡∞™‡±ã‡∞≤‡±ç‡∞ö‡∞Ç‡∞°‡∞ø.", columns: { a: [{ id: 'm1', text: '‡∞â‡∞ú‡±ç‡∞µ‡∞≤ 2.0' }, { id: 'm2', text: '‡∞≤‡∞¨‡±ç‡∞ß‡∞ø‡∞¶‡∞æ‡∞∞‡±Å‡∞°‡±Å' }, { id: 'm3', text: '‡∞Ü‡∞∞‡±ç‡∞•‡∞ø‡∞ï ‡∞∏‡∞π‡∞æ‡∞Ø‡∞Ç' }], b: [{ id: 'm1', text: '2021‡∞≤‡±ã ‡∞™‡±ç‡∞∞‡∞æ‡∞∞‡∞Ç‡∞≠‡∞ø‡∞Ç‡∞ö‡∞¨‡∞°‡∞ø‡∞Ç‡∞¶‡∞ø' }, { id: 'm2', text: 'BPL ‡∞ï‡±Å‡∞ü‡±Å‡∞Ç‡∞¨‡∞æ‡∞≤ ‡∞Æ‡∞π‡∞ø‡∞≥‡∞≤‡±Å' }, { id: 'm3', text: '‡∞ï‡±ä‡∞§‡±ç‡∞§ ‡∞ï‡∞®‡±Ü‡∞ï‡±ç‡∞∑‡∞®‡±ç ‡∞ï‡±ã‡∞∏‡∞Ç ‚Çπ1600' }] }, correctOrder: { m1: 'm1', m2: 'm2', m3: 'm3' } }, { type: 'mcq', points: 10, question: "‡∞â‡∞ú‡±ç‡∞µ‡∞≤ 2.0 ‡∞è ‡∞∏‡∞Ç‡∞µ‡∞§‡±ç‡∞∏‡∞∞‡∞Ç‡∞≤‡±ã ‡∞™‡±ç‡∞∞‡∞æ‡∞∞‡∞Ç‡∞≠‡∞ø‡∞Ç‡∞ö‡∞¨‡∞°‡∞ø‡∞Ç‡∞¶‡∞ø?", options: [ { id: 1, text: "2019", isCorrect: false }, { id: 2, text: "2020", isCorrect: false }, { id: 3, text: "2021", isCorrect: true }, { id: 4, text: "2022", isCorrect: false } ], feedbackCorrect: "‚úÖ ‡∞ñ‡∞ö‡±ç‡∞ö‡∞ø‡∞§‡∞Ç‡∞ó‡∞æ!", feedbackIncorrect: "‚ùå ‡∞∏‡∞∞‡±à‡∞® ‡∞∏‡∞Ç‡∞µ‡∞§‡±ç‡∞∏‡∞∞‡∞Ç 2021." }, { type: 'mcq', points: 10, question: "PMUY ‡∞™‡∞•‡∞ï‡∞æ‡∞®‡±ç‡∞®‡∞ø ‡∞è ‡∞Æ‡∞Ç‡∞§‡±ç‡∞∞‡∞ø‡∞§‡±ç‡∞µ ‡∞∂‡∞æ‡∞ñ ‡∞Ö‡∞Æ‡∞≤‡±Å ‡∞ö‡±á‡∞∏‡±ç‡∞§‡±Å‡∞Ç‡∞¶‡∞ø?", options: [ { id: 1, text: "‡∞Ü‡∞∞‡±ç‡∞•‡∞ø‡∞ï ‡∞Æ‡∞Ç‡∞§‡±ç‡∞∞‡∞ø‡∞§‡±ç‡∞µ ‡∞∂‡∞æ‡∞ñ", isCorrect: false }, { id: 2, text: "‡∞™‡±Ü‡∞ü‡±ç‡∞∞‡±ã‡∞≤‡∞ø‡∞Ø‡∞Ç ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞ó‡±ç‡∞Ø‡∞æ‡∞∏‡±ç ‡∞Æ‡∞Ç‡∞§‡±ç‡∞∞‡∞ø‡∞§‡±ç‡∞µ ‡∞∂‡∞æ‡∞ñ", isCorrect: true }, { id: 3, text: "‡∞Æ‡∞π‡∞ø‡∞≥‡∞æ ‡∞Æ‡∞Ç‡∞§‡±ç‡∞∞‡∞ø‡∞§‡±ç‡∞µ ‡∞∂‡∞æ‡∞ñ", isCorrect: false }, { id: 4, text: "‡∞ó‡±ç‡∞∞‡∞æ‡∞Æ‡±Ä‡∞£‡∞æ‡∞≠‡∞ø‡∞µ‡±É‡∞¶‡±ç‡∞ß‡∞ø ‡∞Æ‡∞Ç‡∞§‡±ç‡∞∞‡∞ø‡∞§‡±ç‡∞µ ‡∞∂‡∞æ‡∞ñ", isCorrect: false } ], feedbackCorrect: "‚úÖ ‡∞∏‡∞∞‡∞ø‡∞Ø‡±à‡∞®‡∞¶‡∞ø!", feedbackIncorrect: "‚ùå ‡∞á‡∞¶‡∞ø ‡∞™‡±Ü‡∞ü‡±ç‡∞∞‡±ã‡∞≤‡∞ø‡∞Ø‡∞Ç ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞ó‡±ç‡∞Ø‡∞æ‡∞∏‡±ç ‡∞Æ‡∞Ç‡∞§‡±ç‡∞∞‡∞ø‡∞§‡±ç‡∞µ ‡∞∂‡∞æ‡∞ñ." } ],
    results: { title: "‡∞Ü‡∞ü ‡∞™‡±Ç‡∞∞‡±ç‡∞§‡∞Ø‡∞ø‡∞Ç‡∞¶‡∞ø!", scoreText: "‡∞Æ‡±Ä ‡∞∏‡∞π‡∞æ‡∞Ø‡∞ï ‡∞∏‡±ç‡∞ï‡±ã‡∞∞‡±Å:", playAgain: "‡∞Æ‡∞≥‡±ç‡∞≥‡±Ä ‡∞Ü‡∞°‡∞Ç‡∞°‡∞ø" },
    common: { skipVideo: "‡∞µ‡±Ä‡∞°‡∞ø‡∞Ø‡±ã‡∞®‡±Å ‡∞¶‡∞æ‡∞ü‡∞µ‡±á‡∞Ø‡∞ø", checkAnswer: "‡∞∏‡∞Æ‡∞æ‡∞ß‡∞æ‡∞®‡∞Ç ‡∞§‡∞®‡∞ø‡∞ñ‡±Ä ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø", nextQuestion: "‡∞§‡∞¶‡±Å‡∞™‡∞∞‡∞ø ‡∞™‡±ç‡∞∞‡∞∂‡±ç‡∞®", nextStep: "‡∞§‡∞¶‡±Å‡∞™‡∞∞‡∞ø ‡∞¶‡∞∂" },
    postQuiz: { askApply: "‡∞Æ‡±Ä‡∞∞‡±Å ‡∞≤‡±á‡∞¶‡∞æ ‡∞Æ‡±Ä ‡∞ï‡±Å‡∞ü‡±Å‡∞Ç‡∞¨‡∞Ç ‡∞â‡∞ú‡±ç‡∞µ‡∞≤ ‡∞Ø‡±ã‡∞ú‡∞®‡∞ï‡±Å ‡∞¶‡∞∞‡∞ñ‡∞æ‡∞∏‡±ç‡∞§‡±Å ‡∞ö‡±á‡∞∏‡±Å‡∞ï‡±Å‡∞®‡±ç‡∞®‡∞æ‡∞∞‡∞æ?", yesButton: "‡∞Ö‡∞µ‡±Å‡∞®‡±Å, ‡∞ö‡±á‡∞∏‡±Å‡∞ï‡±Å‡∞®‡±ç‡∞®‡∞æ‡∞Æ‡±Å", noButton: "‡∞≤‡±á‡∞¶‡±Å, ‡∞®‡∞æ‡∞ï‡±Å ‡∞Æ‡∞∞‡∞ø‡∞Ç‡∞§ ‡∞ö‡±Ü‡∞™‡±ç‡∞™‡∞Ç‡∞°‡∞ø", infoTitle: "PM ‡∞â‡∞ú‡±ç‡∞µ‡∞≤ ‡∞Ø‡±ã‡∞ú‡∞®‡∞ï‡±Å ‡∞é‡∞≤‡∞æ ‡∞¶‡∞∞‡∞ñ‡∞æ‡∞∏‡±ç‡∞§‡±Å ‡∞ö‡±á‡∞Ø‡∞æ‡∞≤‡∞ø", infoText: "‡∞Æ‡±Ä‡∞∞‡±Å ‡∞Ü‡∞®‡±ç‚Äå‡∞≤‡±à‡∞®‡±ç ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞Ü‡∞´‡±ç‚Äå‡∞≤‡±à‡∞®‡±ç ‡∞∞‡±Ü‡∞Ç‡∞°‡∞ø‡∞Ç‡∞ü‡∞ø‡∞≤‡±ã‡∞®‡±Ç ‡∞¶‡∞∞‡∞ñ‡∞æ‡∞∏‡±ç‡∞§‡±Å ‡∞ö‡±á‡∞∏‡±Å‡∞ï‡±ã‡∞µ‡∞ö‡±ç‡∞ö‡±Å. ‡∞Æ‡±Ä ‡∞Ü‡∞ß‡∞æ‡∞∞‡±ç ‡∞ï‡∞æ‡∞∞‡±ç‡∞°‡±ç ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞∞‡±á‡∞∑‡∞®‡±ç ‡∞ï‡∞æ‡∞∞‡±ç‡∞°‡±ç ‡∞µ‡∞Ç‡∞ü‡∞ø ‡∞Ö‡∞µ‡∞∏‡∞∞‡∞Æ‡±à‡∞® ‡∞™‡∞§‡±ç‡∞∞‡∞æ‡∞≤‡∞§‡±ã ‡∞∏‡∞Æ‡±Ä‡∞™‡∞Ç‡∞≤‡±ã‡∞®‡∞ø LPG ‡∞™‡∞Ç‡∞™‡∞ø‡∞£‡±Ä ‡∞è‡∞ú‡±Ü‡∞®‡±ç‡∞∏‡±Ä ‡∞≤‡±á‡∞¶‡∞æ ‡∞ï‡∞æ‡∞Æ‡∞®‡±ç ‡∞∏‡∞∞‡±ç‡∞µ‡±Ä‡∞∏‡±ç ‡∞∏‡±Ü‡∞Ç‡∞ü‡∞∞‡±ç (CSC)‡∞®‡∞ø ‡∞∏‡∞Ç‡∞¶‡∞∞‡±ç‡∞∂‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø.", helplineText: "‡∞Æ‡∞∞‡∞ø‡∞Ç‡∞§ ‡∞∏‡∞Æ‡∞æ‡∞ö‡∞æ‡∞∞‡∞Ç ‡∞ï‡±ã‡∞∏‡∞Ç, ‡∞ü‡±ã‡∞≤‡±ç-‡∞´‡±ç‡∞∞‡±Ä ‡∞π‡±Ü‡∞≤‡±ç‡∞™‡±ç‚Äå‡∞≤‡±à‡∞®‡±ç‚Äå‡∞ï‡±Å ‡∞ï‡∞æ‡∞≤‡±ç ‡∞ö‡±á‡∞Ø‡∞Ç‡∞°‡∞ø:", helplineNumber: "1800-266-6696", websiteText: "‡∞≤‡±á‡∞¶‡∞æ ‡∞Ö‡∞ß‡∞ø‡∞ï‡∞æ‡∞∞‡∞ø‡∞ï ‡∞µ‡±Ü‡∞¨‡±ç‚Äå‡∞∏‡±à‡∞ü‡±ç‚Äå‡∞®‡±Å ‡∞∏‡∞Ç‡∞¶‡∞∞‡±ç‡∞∂‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø:", websiteLinkText: "pmuy.gov.in ‡∞∏‡∞Ç‡∞¶‡∞∞‡±ç‡∞∂‡∞ø‡∞Ç‡∞ö‡∞Ç‡∞°‡∞ø", appliedMessageTitle: "‡∞Ö‡∞¶‡±ç‡∞≠‡±Å‡∞§‡∞Ç!", appliedMessageText: "‡∞á‡∞§‡∞∞‡±Å‡∞≤‡±Å ‡∞ï‡±Ç‡∞°‡∞æ ‡∞™‡±ç‡∞∞‡∞Ø‡±ã‡∞ú‡∞®‡∞Ç ‡∞™‡±ä‡∞Ç‡∞¶‡±á‡∞≤‡∞æ ‡∞à ‡∞™‡∞•‡∞ï‡∞æ‡∞®‡±ç‡∞®‡∞ø ‡∞Æ‡±Ä ‡∞∏‡±ç‡∞®‡±á‡∞π‡∞ø‡∞§‡±Å‡∞≤‡±Å ‡∞Æ‡∞∞‡∞ø‡∞Ø‡±Å ‡∞ï‡±Å‡∞ü‡±Å‡∞Ç‡∞¨ ‡∞∏‡∞≠‡±ç‡∞Ø‡±Å‡∞≤‡∞§‡±ã ‡∞™‡∞Ç‡∞ö‡±Å‡∞ï‡±ã‡∞Ç‡∞°‡∞ø.", shareButton: "‡∞™‡∞•‡∞ï‡∞æ‡∞®‡±ç‡∞®‡∞ø ‡∞™‡∞Ç‡∞ö‡±Å‡∞ï‡±ã‡∞Ç‡∞°‡∞ø" }
  },
  kn: {
    title: "ü™î ‡≤â‡≤ú‡≥ç‡≤µ‡≤≤‡≤æ ‡≤Ö‡≤µ‡≤∞ ‡≤∏‡≤Ç‡≤§‡≥ã‡≤∑‡≤¶ ‡≤Ö‡≤°‡≤ø‡≤ó‡≥Ü‡≤Æ‡≤®‡≥Ü ü™î",
    intro: { description: "‡≤â‡≤ú‡≥ç‡≤µ‡≤≤ ‡≤Ø‡≥ã‡≤ú‡≤®‡≥Ü‡≤Ø ‡≤¨‡≤ó‡≥ç‡≤ó‡≥Ü ‡≤§‡≤ø‡≤≥‡≤ø‡≤Ø‡≤≤‡≥Å ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤Ö‡≤¶‡≥Å ‡≤®‡≤ø‡≤Æ‡≥ç‡≤Æ‡≤Ç‡≤§‡≤π ‡≤ï‡≥Å‡≤ü‡≥Å‡≤Ç‡≤¨‡≤ó‡≤≥‡≤ø‡≤ó‡≥Ü ‡≤π‡≥á‡≤ó‡≥Ü ‡≤∏‡≤π‡≤æ‡≤Ø ‡≤Æ‡≤æ‡≤°‡≥Å‡≤§‡≥ç‡≤§‡≤¶‡≥Ü ‡≤é‡≤Ç‡≤¨‡≥Å‡≤¶‡≤®‡≥ç‡≤®‡≥Å ‡≤®‡≥ã‡≤°‡≤≤‡≥Å ‡≤í‡≤Ç‡≤¶‡≥Å ‡≤Æ‡≥ã‡≤ú‡≤ø‡≤® ‡≤Ü‡≤ü‡≤µ‡≤®‡≥ç‡≤®‡≥Å ‡≤Ü‡≤°‡≤ø!", startButton: "‡≤Ü‡≤ü ‡≤™‡≥ç‡≤∞‡≤æ‡≤∞‡≤Ç‡≤≠‡≤ø‡≤∏‡≤ø" },
    quizIntro: { title: "‡≤π‡≤Ç‡≤§ 1: ‡≤ú‡≥ç‡≤û‡≤æ‡≤®‡≤¶ ‡≤∏‡≤µ‡≤æ‡≤≤‡≥Å!", instruction: "‡≤π‡≥ä‡≤∏ ‡≤ó‡≥ç‡≤Ø‡≤æ‡≤∏‡≥ç ‡≤∏‡≤ø‡≤≤‡≤ø‡≤Ç‡≤°‡≤∞‡≥ç ‡≤Ö‡≤®‡≥ç‡≤≤‡≤æ‡≤ï‡≥ç ‡≤Æ‡≤æ‡≤°‡≤≤‡≥Å ‡≤à ‡≤™‡≥ç‡≤∞‡≤∂‡≥ç‡≤®‡≥Ü‡≤ó‡≤≥‡≤ø‡≤ó‡≥Ü ‡≤â‡≤§‡≥ç‡≤§‡≤∞‡≤ø‡≤∏‡≤ø!" },
    game2: { instruction: "‡≤®‡≥Ä‡≤µ‡≥Å ‡≤∞‡≤∏‡≤™‡≥ç‡≤∞‡≤∂‡≥ç‡≤®‡≥Ü‡≤Ø‡≤≤‡≥ç‡≤≤‡≤ø ‡≤â‡≤§‡≥ç‡≤§‡≥Ä‡≤∞‡≥ç‡≤£‡≤∞‡≤æ‡≤ó‡≤ø‡≤¶‡≥ç‡≤¶‡≥Ä‡≤∞‡≤ø! ‡≤à‡≤ó, ‡≤Ö‡≤°‡≤ø‡≤ó‡≥Ü‡≤Æ‡≤®‡≥Ü‡≤Ø‡≤®‡≥ç‡≤®‡≥Å ‡≤¨‡≤¶‡≤≤‡≤æ‡≤Ø‡≤ø‡≤∏‡≥ã‡≤£. ‡≤π‡≤≥‡≥Ü‡≤Ø ‡≤∏‡≥ç‡≤ü‡≤µ‡≥ç ‡≤Ö‡≤®‡≥ç‡≤®‡≥Å ‡≤π‡≥ä‡≤∞‡≤ó‡≥Ü ‡≤é‡≤≥‡≥Ü‡≤Ø‡≤ø‡≤∞‡≤ø.", instruction2: "‡≤™‡≤∞‡≤ø‡≤™‡≥Ç‡≤∞‡≥ç‡≤£! ‡≤à‡≤ó ‡≤π‡≥ä‡≤∏ ‡≤é‡≤≤‡≥ç‚Äå‡≤™‡≤ø‡≤ú‡≤ø ‡≤∏‡≤ø‡≤≤‡≤ø‡≤Ç‡≤°‡≤∞‡≥ç ‡≤§‡≤®‡≥ç‡≤®‡≤ø.", success: "‡≤®‡≥ã‡≤°‡≤ø! ‡≤í‡≤Ç‡≤¶‡≥Å ‡≤∏‡≥ç‡≤µ‡≤ö‡≥ç‡≤õ ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤∏‡≤Ç‡≤§‡≥ã‡≤∑‡≤¶ ‡≤Ö‡≤°‡≤ø‡≤ó‡≥Ü‡≤Æ‡≤®‡≥Ü!" },
    questions: [ { type: 'mcq', points: 10, question: "PMUY ‡≤Ø‡≥ã‡≤ú‡≤®‡≥Ü‡≤Ø‡≤®‡≥ç‡≤®‡≥Å ‡≤Ø‡≤æ‡≤µ‡≤æ‡≤ó ‡≤™‡≥ç‡≤∞‡≤æ‡≤∞‡≤Ç‡≤≠‡≤ø‡≤∏‡≤≤‡≤æ‡≤Ø‡≤ø‡≤§‡≥Å?", options: [ { id: 1, text: "‡≤Ü‡≤ó‡≤∏‡≥ç‡≤ü‡≥ç 2015", isCorrect: false }, { id: 2, text: "‡≤Æ‡≥á 2016", isCorrect: true }, { id: 3, text: "‡≤ú‡≤®‡≤µ‡≤∞‡≤ø 2017", isCorrect: false }, { id: 4, text: "‡≤Ö‡≤ï‡≥ç‡≤ü‡≥ã‡≤¨‡≤∞‡≥ç 2018", isCorrect: false } ], feedbackCorrect: "‚úÖ ‡≤∏‡≤∞‡≤ø!", feedbackIncorrect: "‚ùå ‡≤ì‡≤π‡≥ç, ‡≤Æ‡≤§‡≥ç‡≤§‡≥Ü ‡≤™‡≥ç‡≤∞‡≤Ø‡≤§‡≥ç‡≤®‡≤ø‡≤∏‡≤ø!" }, { type: 'mcq', points: 10, question: "‡≤â‡≤ú‡≥ç‡≤µ‡≤≤ ‡≤Ø‡≥ã‡≤ú‡≤®‡≥Ü‡≤Ø ‡≤™‡≥ç‡≤∞‡≤æ‡≤•‡≤Æ‡≤ø‡≤ï ‡≤â‡≤¶‡≥ç‡≤¶‡≥á‡≤∂‡≤µ‡≥á‡≤®‡≥Å?", options: [ { id: 1, text: "‡≤µ‡≤ø‡≤¶‡≥ç‡≤Ø‡≥Å‡≤§‡≥ç ‡≤í‡≤¶‡≤ó‡≤ø‡≤∏‡≥Å‡≤µ‡≥Å‡≤¶‡≥Å", isCorrect: false }, { id: 2, text: "‡≤∂‡≥å‡≤ö‡≤æ‡≤≤‡≤Ø ‡≤®‡≤ø‡≤∞‡≥ç‡≤Æ‡≤ø‡≤∏‡≥Å‡≤µ‡≥Å‡≤¶‡≥Å", isCorrect: false }, { id: 3, text: "‡≤∂‡≥Å‡≤¶‡≥ç‡≤ß ‡≤Ö‡≤°‡≥Å‡≤ó‡≥Ü ‡≤á‡≤Ç‡≤ß‡≤® (LPG) ‡≤í‡≤¶‡≤ó‡≤ø‡≤∏‡≥Å‡≤µ‡≥Å‡≤¶‡≥Å", isCorrect: true }, { id: 4, text: "‡≤π‡≤£‡≤ï‡≤æ‡≤∏‡≤ø‡≤® ‡≤∏‡≤æ‡≤≤ ‡≤®‡≥Ä‡≤°‡≥Å‡≤µ‡≥Å‡≤¶‡≥Å", isCorrect: false } ], feedbackCorrect: "‚úÖ ‡≤∏‡≤∞‡≤ø!", feedbackIncorrect: "‚ùå ‡≤Ö‡≤¶‡≥Å ‡≤Ö‡≤≤‡≥ç‡≤≤." }, { type: 'match', points: 15, question: "‡≤µ‡≥à‡≤∂‡≤ø‡≤∑‡≥ç‡≤ü‡≥ç‡≤Ø‡≤µ‡≤®‡≥ç‡≤®‡≥Å ‡≤Ö‡≤¶‡≤∞ ‡≤µ‡≤ø‡≤µ‡≤∞‡≤£‡≥Ü‡≤Ø‡≥ä‡≤Ç‡≤¶‡≤ø‡≤ó‡≥Ü ‡≤π‡≥ä‡≤Ç‡≤¶‡≤ø‡≤∏‡≤ø.", columns: { a: [{ id: 'm1', text: '‡≤â‡≤ú‡≥ç‡≤µ‡≤≤ 2.0' }, { id: 'm2', text: '‡≤´‡≤≤‡≤æ‡≤®‡≥Å‡≤≠‡≤µ‡≤ø' }, { id: 'm3', text: '‡≤π‡≤£‡≤ï‡≤æ‡≤∏‡≤ø‡≤® ‡≤®‡≥Ü‡≤∞‡≤µ‡≥Å' }], b: [{ id: 'm1', text: '2021 ‡≤∞‡≤≤‡≥ç‡≤≤‡≤ø ‡≤™‡≥ç‡≤∞‡≤æ‡≤∞‡≤Ç‡≤≠‡≤µ‡≤æ‡≤Ø‡≤ø‡≤§‡≥Å' }, { id: 'm2', text: 'BPL ‡≤ï‡≥Å‡≤ü‡≥Å‡≤Ç‡≤¨‡≤ó‡≤≥ ‡≤Æ‡≤π‡≤ø‡≤≥‡≥Ü‡≤Ø‡≤∞‡≥Å' }, { id: 'm3', text: '‡≤π‡≥ä‡≤∏ ‡≤∏‡≤Ç‡≤™‡≤∞‡≥ç‡≤ï‡≤ï‡≥ç‡≤ï‡≤æ‡≤ó‡≤ø ‚Çπ1600' }] }, correctOrder: { m1: 'm1', m2: 'm2', m3: 'm3' } }, { type: 'mcq', points: 10, question: "‡≤â‡≤ú‡≥ç‡≤µ‡≤≤ 2.0 ‡≤Ö‡≤®‡≥ç‡≤®‡≥Å ‡≤Ø‡≤æ‡≤µ ‡≤µ‡≤∞‡≥ç‡≤∑‡≤¶‡≤≤‡≥ç‡≤≤‡≤ø ‡≤™‡≥ç‡≤∞‡≤æ‡≤∞‡≤Ç‡≤≠‡≤ø‡≤∏‡≤≤‡≤æ‡≤Ø‡≤ø‡≤§‡≥Å?", options: [ { id: 1, text: "2019", isCorrect: false }, { id: 2, text: "2020", isCorrect: false }, { id: 3, text: "2021", isCorrect: true }, { id: 4, text: "2022", isCorrect: false } ], feedbackCorrect: "‚úÖ ‡≤®‡≤ø‡≤ñ‡≤∞‡≤µ‡≤æ‡≤ó‡≤ø!", feedbackIncorrect: "‚ùå ‡≤∏‡≤∞‡≤ø‡≤Ø‡≤æ‡≤¶ ‡≤µ‡≤∞‡≥ç‡≤∑ 2021." }, { type: 'mcq', points: 10, question: "PMUY ‡≤Ø‡≥ã‡≤ú‡≤®‡≥Ü‡≤Ø‡≤®‡≥ç‡≤®‡≥Å ‡≤Ø‡≤æ‡≤µ ‡≤∏‡≤ö‡≤ø‡≤µ‡≤æ‡≤≤‡≤Ø ‡≤ú‡≤æ‡≤∞‡≤ø‡≤ó‡≥ä‡≤≥‡≤ø‡≤∏‡≥Å‡≤§‡≥ç‡≤§‡≤¶‡≥Ü?", options: [ { id: 1, text: "‡≤π‡≤£‡≤ï‡≤æ‡≤∏‡≥Å ‡≤∏‡≤ö‡≤ø‡≤µ‡≤æ‡≤≤‡≤Ø", isCorrect: false }, { id: 2, text: "‡≤™‡≥Ü‡≤ü‡≥ç‡≤∞‡≥ã‡≤≤‡≤ø‡≤Ø‡≤Ç ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤Ö‡≤®‡≤ø‡≤≤ ‡≤∏‡≤ö‡≤ø‡≤µ‡≤æ‡≤≤‡≤Ø", isCorrect: true }, { id: 3, text: "‡≤Æ‡≤π‡≤ø‡≤≥‡≤æ ‡≤∏‡≤ö‡≤ø‡≤µ‡≤æ‡≤≤‡≤Ø", isCorrect: false }, { id: 4, text: "‡≤ó‡≥ç‡≤∞‡≤æ‡≤Æ‡≥Ä‡≤£‡≤æ‡≤≠‡≤ø‡≤µ‡≥É‡≤¶‡≥ç‡≤ß‡≤ø ‡≤∏‡≤ö‡≤ø‡≤µ‡≤æ‡≤≤‡≤Ø", isCorrect: false } ], feedbackCorrect: "‚úÖ ‡≤∏‡≤∞‡≤ø!", feedbackIncorrect: "‚ùå ‡≤á‡≤¶‡≥Å ‡≤™‡≥Ü‡≤ü‡≥ç‡≤∞‡≥ã‡≤≤‡≤ø‡≤Ø‡≤Ç ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤Ö‡≤®‡≤ø‡≤≤ ‡≤∏‡≤ö‡≤ø‡≤µ‡≤æ‡≤≤‡≤Ø." } ],
    results: { title: "‡≤Ü‡≤ü ‡≤Æ‡≥Å‡≤ó‡≤ø‡≤¶‡≤ø‡≤¶‡≥Ü!", scoreText: "‡≤®‡≤ø‡≤Æ‡≥ç‡≤Æ ‡≤∏‡≤π‡≤æ‡≤Ø‡≤ï ‡≤∏‡≥ç‡≤ï‡≥ã‡≤∞‡≥ç:", playAgain: "‡≤Æ‡≤§‡≥ç‡≤§‡≥Ü ‡≤Ü‡≤°‡≤ø" },
    common: { skipVideo: "‡≤µ‡≥Ä‡≤°‡≤ø‡≤Ø‡≥ä ‡≤¨‡≤ø‡≤ü‡≥ç‡≤ü‡≥Å‡≤¨‡≤ø‡≤°‡≤ø", checkAnswer: "‡≤â‡≤§‡≥ç‡≤§‡≤∞‡≤µ‡≤®‡≥ç‡≤®‡≥Å ‡≤™‡≤∞‡≤ø‡≤∂‡≥Ä‡≤≤‡≤ø‡≤∏‡≤ø", nextQuestion: "‡≤Æ‡≥Å‡≤Ç‡≤¶‡≤ø‡≤® ‡≤™‡≥ç‡≤∞‡≤∂‡≥ç‡≤®‡≥Ü", nextStep: "‡≤Æ‡≥Å‡≤Ç‡≤¶‡≤ø‡≤® ‡≤π‡≤Ç‡≤§" },
    postQuiz: { askApply: "‡≤®‡≥Ä‡≤µ‡≥Å ‡≤Ö‡≤•‡≤µ‡≤æ ‡≤®‡≤ø‡≤Æ‡≥ç‡≤Æ ‡≤ï‡≥Å‡≤ü‡≥Å‡≤Ç‡≤¨‡≤¶‡≤µ‡≤∞‡≥Å ‡≤â‡≤ú‡≥ç‡≤µ‡≤≤ ‡≤Ø‡≥ã‡≤ú‡≤®‡≥Ü‡≤ó‡≥Ü ‡≤Ö‡≤∞‡≥ç‡≤ú‡≤ø ‡≤∏‡≤≤‡≥ç‡≤≤‡≤ø‡≤∏‡≤ø‡≤¶‡≥ç‡≤¶‡≥Ä‡≤∞‡≤æ?", yesButton: "‡≤π‡≥å‡≤¶‡≥Å, ‡≤∏‡≤≤‡≥ç‡≤≤‡≤ø‡≤∏‡≤ø‡≤¶‡≥ç‡≤¶‡≥á‡≤µ‡≥Ü", noButton: "‡≤á‡≤≤‡≥ç‡≤≤, ‡≤®‡≤®‡≤ó‡≥Ü ‡≤á‡≤®‡≥ç‡≤®‡≤∑‡≥ç‡≤ü‡≥Å ‡≤§‡≤ø‡≤≥‡≤ø‡≤∏‡≤ø", infoTitle: "‡≤™‡≤ø‡≤é‡≤Ç ‡≤â‡≤ú‡≥ç‡≤µ‡≤≤ ‡≤Ø‡≥ã‡≤ú‡≤®‡≥Ü‡≤ó‡≥Ü ‡≤Ö‡≤∞‡≥ç‡≤ú‡≤ø ‡≤∏‡≤≤‡≥ç‡≤≤‡≤ø‡≤∏‡≥Å‡≤µ‡≥Å‡≤¶‡≥Å ‡≤π‡≥á‡≤ó‡≥Ü", infoText: "‡≤®‡≥Ä‡≤µ‡≥Å ‡≤Ü‡≤®‡≥ç‚Äå‡≤≤‡≥à‡≤®‡≥ç ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤Ü‡≤´‡≥ç‚Äå‡≤≤‡≥à‡≤®‡≥ç ‡≤é‡≤∞‡≤°‡≤∞‡≤≤‡≥ç‡≤≤‡≥Ç ‡≤Ö‡≤∞‡≥ç‡≤ú‡≤ø ‡≤∏‡≤≤‡≥ç‡≤≤‡≤ø‡≤∏‡≤¨‡≤π‡≥Å‡≤¶‡≥Å. ‡≤®‡≤ø‡≤Æ‡≥ç‡≤Æ ‡≤Ü‡≤ß‡≤æ‡≤∞‡≥ç ‡≤ï‡≤æ‡≤∞‡≥ç‡≤°‡≥ç ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤™‡≤°‡≤ø‡≤§‡≤∞ ‡≤ö‡≥Ä‡≤ü‡≤ø‡≤Ø‡≤Ç‡≤§‡≤π ‡≤Ö‡≤ó‡≤§‡≥ç‡≤Ø ‡≤¶‡≤æ‡≤ñ‡≤≤‡≥Ü‡≤ó‡≤≥‡≥ä‡≤Ç‡≤¶‡≤ø‡≤ó‡≥Ü ‡≤π‡≤§‡≥ç‡≤§‡≤ø‡≤∞‡≤¶ ‡≤é‡≤≤‡≥ç‚Äå‡≤™‡≤ø‡≤ú‡≤ø ‡≤µ‡≤ø‡≤§‡≤∞‡≤£‡≤æ ‡≤∏‡≤Ç‡≤∏‡≥ç‡≤•‡≥Ü ‡≤Ö‡≤•‡≤µ‡≤æ ‡≤∏‡≤æ‡≤Æ‡≤æ‡≤®‡≥ç‡≤Ø ‡≤∏‡≥á‡≤µ‡≤æ ‡≤ï‡≥á‡≤Ç‡≤¶‡≥ç‡≤∞‡≤ï‡≥ç‡≤ï‡≥Ü (CSC) ‡≤≠‡≥á‡≤ü‡≤ø ‡≤®‡≥Ä‡≤°‡≤ø.", helplineText: "‡≤π‡≥Ü‡≤ö‡≥ç‡≤ö‡≤ø‡≤® ‡≤Æ‡≤æ‡≤π‡≤ø‡≤§‡≤ø‡≤ó‡≤æ‡≤ó‡≤ø, ‡≤ü‡≥ã‡≤≤‡≥ç-‡≤´‡≥ç‡≤∞‡≥Ä ‡≤∏‡≤π‡≤æ‡≤Ø‡≤µ‡≤æ‡≤£‡≤ø‡≤ó‡≥Ü ‡≤ï‡≤∞‡≥Ü ‡≤Æ‡≤æ‡≤°‡≤ø:", helplineNumber: "1800-266-6696", websiteText: "‡≤Ö‡≤•‡≤µ‡≤æ ‡≤Ö‡≤ß‡≤ø‡≤ï‡≥É‡≤§ ‡≤µ‡≥Ü‡≤¨‡≥ç‚Äå‡≤∏‡≥à‡≤ü‡≥ç‚Äå‡≤ó‡≥Ü ‡≤≠‡≥á‡≤ü‡≤ø ‡≤®‡≥Ä‡≤°‡≤ø:", websiteLinkText: "pmuy.gov.in ‡≤ó‡≥Ü ‡≤≠‡≥á‡≤ü‡≤ø ‡≤®‡≥Ä‡≤°‡≤ø", appliedMessageTitle: "‡≤Ö‡≤¶‡≥Å ‡≤Ö‡≤¶‡≥ç‡≤≠‡≥Å‡≤§!", appliedMessageText: "‡≤á‡≤§‡≤∞‡≤∞‡≥Å ‡≤∏‡≤π ‡≤™‡≥ç‡≤∞‡≤Ø‡≥ã‡≤ú‡≤® ‡≤™‡≤°‡≥Ü‡≤Ø‡≤≤‡≥Å ‡≤à ‡≤Ø‡≥ã‡≤ú‡≤®‡≥Ü‡≤Ø‡≤®‡≥ç‡≤®‡≥Å ‡≤®‡≤ø‡≤Æ‡≥ç‡≤Æ ‡≤∏‡≥ç‡≤®‡≥á‡≤π‡≤ø‡≤§‡≤∞‡≥Å ‡≤Æ‡≤§‡≥ç‡≤§‡≥Å ‡≤ï‡≥Å‡≤ü‡≥Å‡≤Ç‡≤¨‡≤¶‡≥ä‡≤Ç‡≤¶‡≤ø‡≤ó‡≥Ü ‡≤π‡≤Ç‡≤ö‡≤ø‡≤ï‡≥ä‡≤≥‡≥ç‡≤≥‡≤ø.", shareButton: "‡≤Ø‡≥ã‡≤ú‡≤®‡≥Ü‡≤Ø‡≤®‡≥ç‡≤®‡≥Å ‡≤π‡≤Ç‡≤ö‡≤ø‡≤ï‡≥ä‡≤≥‡≥ç‡≤≥‡≤ø" }
  },
};

// --- Helper Components & Hooks ---
const useWindowWidth = () => {
    const [width, setWidth] = useState(window.innerWidth);
    useEffect(() => {
      const handleResize = () => setWidth(window.innerWidth);
      window.addEventListener('resize', handleResize);
      return () => window.removeEventListener('resize', handleResize);
    }, []);
    return width;
};
const ScoreCounter = ({ finalScore }) => {
    const [displayScore, setDisplayScore] = useState(0);
    useEffect(() => {
      if (finalScore === 0) { setDisplayScore(0); return; }
      const duration = 1000;
      const stepTime = Math.max(1, Math.abs(Math.floor(duration / finalScore)));
      const timer = setInterval(() => {
        setDisplayScore(prev => {
          if (prev < finalScore) { return prev + 1; }
          clearInterval(timer);
          return finalScore;
        });
      }, stepTime);
      return () => clearInterval(timer);
    }, [finalScore]);
    return <p style={styles.finalScoreNumber}>{displayScore}</p>;
};
const shuffleArray = (array) => {
    let currentIndex = array.length, randomIndex;
    while (currentIndex !== 0) {
      randomIndex = Math.floor(Math.random() * currentIndex);
      currentIndex--;
      [array[currentIndex], array[randomIndex]] = [array[randomIndex], array[currentIndex]];
    }
    return array;
};

// --- Main Game Component ---
const Ujjwala = () => {
  const [gameState, setGameState] = useState('intro'); // intro, video, quiz, transformation, results
  const [lang, setLang] = useState('en-US');
  const [voices, setVoices] = useState([]);
  const synth = window.speechSynthesis;

  // ‚ú® FIX: Moved useWindowWidth to the top level
  const isMobile = useWindowWidth() < 768;

  useEffect(() => {
    const loadVoices = () => { if (synth.getVoices().length) { setVoices(synth.getVoices()); }};
    loadVoices();
    if (synth.onvoiceschanged !== undefined) { synth.onvoiceschanged = loadVoices; }
    return () => { synth.cancel(); synth.onvoiceschanged = null; };
  }, [synth]);
  
  const speakText = (text, langCode) => {
    if (!isTtsEnabled || !text || !synth || !voices.length) return;
    synth.cancel();
    const utterance = new SpeechSynthesisUtterance(text);
    let voiceToUse = voices.find(v => v.lang === langCode);
    if (!voiceToUse) {
      const baseLang = langCode.split('-')[0];
      voiceToUse = voices.find(v => v.lang.startsWith(baseLang));
    }
    if (voiceToUse) { utterance.voice = voiceToUse; utterance.lang = voiceToUse.lang; } 
    else { utterance.lang = 'en-US'; }
    utterance.rate = 0.9;
    synth.speak(utterance);
  };
  
  const [score, setScore] = useState(0);
  const [isMusicPlaying, setIsMusicPlaying] = useState(false);
  const [isTtsEnabled, setIsTtsEnabled] = useState(true);
  const [postQuizState, setPostQuizState] = useState('prompt');
  const backgroundMusicRef = useRef(null);

  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);
  const [isAnswered, setIsAnswered] = useState(false);
  const [feedback, setFeedback] = useState("");
  const [selectedOption, setSelectedOption] = useState(null);
  const [matches, setMatches] = useState({});
  const [selectedLeftItem, setSelectedLeftItem] = useState(null);

  const [chulhaRemoved, setChulhaRemoved] = useState(false);
  const [lpgPlaced, setLpgPlaced] = useState(false);

  const baseLang = useMemo(() => lang.split('-')[0], [lang]);
  const langContent = useMemo(() => {
    const content = gameData[baseLang] || gameData.en;
    return { ...gameData.en, ...content, intro: {...gameData.en.intro, ...content.intro}, quizIntro: {...gameData.en.quizIntro, ...content.quizIntro}, game2: {...gameData.en.game2, ...content.game2}, common: {...gameData.en.common, ...content.common}, results: {...gameData.en.results, ...content.results}, postQuiz: {...gameData.en.postQuiz, ...content.postQuiz} };
  }, [baseLang]);
  const currentQuestion = useMemo(() => langContent.questions?.[currentQuestionIndex], [currentQuestionIndex, langContent]);
  const shuffledColumnB = useMemo(() => { if (currentQuestion?.type !== 'match') return []; return shuffleArray([...currentQuestion.columns.b]); }, [currentQuestion]);
  
  useEffect(() => {
    const instruction = 
        gameState === 'quiz' && !isAnswered ? langContent.questions[currentQuestionIndex].question :
        gameState === 'transformation' ? (chulhaRemoved ? langContent.game2.instruction2 : langContent.game2.instruction) : null;
    
    if (instruction && voices.length > 0) {
      const timer = setTimeout(() => speakText(instruction, lang), 500);
      return () => clearTimeout(timer);
    }
  }, [gameState, chulhaRemoved, currentQuestionIndex, voices, lang, isTtsEnabled, langContent, isAnswered]);
  
  const handleMCQOptionClick = (option) => { 
    if (isAnswered) return;
    setIsAnswered(true); 
    if (option.isCorrect) { 
      correctAnswerSound.play(); setFeedback(currentQuestion.feedbackCorrect); setScore(s => s + currentQuestion.points); 
    } else { 
      wrongAnswerSound.play(); setFeedback(currentQuestion.feedbackIncorrect); 
    } 
  };
  
  const handleCheckMatchAnswer = () => {
    if (isAnswered) return;
    setIsAnswered(true);
    let correctMatches = 0;
    const totalPairs = currentQuestion.columns.a.length;
    for (const leftId in matches) { if (matches[leftId] === currentQuestion.correctOrder[leftId]) { correctMatches++; } }
    const points = Math.round((correctMatches / totalPairs) * currentQuestion.points);
    if (points > 0) { correctAnswerSound.play(); } else { wrongAnswerSound.play(); }
    setScore(s => s + points);
    setFeedback(`${correctMatches} of ${totalPairs} correct matches.`);
  };

  const handleShare = async () => {
    const shareData = { title: 'Pradhan Mantri Ujjwala Yojana', text: 'Learn about the Ujjwala Yojana, a scheme providing clean cooking fuel to women from BPL households.', url: 'https://www.pmuy.gov.in/' };
    try {
      if (navigator.share) { await navigator.share(shareData); } 
      else { alert("Share functionality is not supported on your browser. Please copy the link manually: https://www.pmuy.gov.in/"); }
    } catch (err) { console.error("Share failed:", err); }
  };

  const resetGame = () => { setScore(0); setPostQuizState('prompt'); setCurrentQuestionIndex(0); setIsAnswered(false); setFeedback(""); setSelectedOption(null); setMatches({}); setSelectedLeftItem(null); setChulhaRemoved(false); setLpgPlaced(false); };
  const handleStartQuiz = () => { gameStartSound.play(); resetGame(); setGameState('video'); };
  const handleSkipVideo = () => setGameState('quiz');
  const handleLanguageChange = (e) => setLang(e.target.value);
  const toggleMusic = () => { const music = backgroundMusicRef.current; if (isMusicPlaying) { music.pause(); } else { music.play().catch(e => console.error("Autoplay prevented:", e)); } setIsMusicPlaying(!isMusicPlaying); };
  const toggleTts = () => setIsTtsEnabled(!isTtsEnabled);
  const handleRestart = () => { resetGame(); setGameState('intro'); };
  const handleNextQuestion = () => { 
    if (currentQuestionIndex < langContent.questions.length - 1) { 
      setCurrentQuestionIndex(i => i + 1); 
      setIsAnswered(false); setFeedback(""); setSelectedOption(null); setMatches({}); setSelectedLeftItem(null);
    } else { 
      setGameState('transformation');
    } 
  };
  const handleDropTransformation = (e, target) => {
    e.preventDefault();
    const id = e.dataTransfer.getData('id');
    if (id === 'chulha' && target === 'out' && !chulhaRemoved) {
        correctAnswerSound.play();
        setChulhaRemoved(true);
        setScore(s => s + 20);
    } else if (id === 'lpg' && target === 'in' && chulhaRemoved && !lpgPlaced) {
        transformationSound.play();
        setLpgPlaced(true);
        setScore(s => s + 30);
        setTimeout(() => setGameState('results'), 2000);
    } else {
        wrongAnswerSound.play();
    }
  };
  
  const renderIntroScreen = () => (
    <div style={styles.introContainer} className="fade-in">
      <div style={styles.avatar}>ü™î</div>
      <h1 style={styles.title}>{langContent.title}</h1>
      <p style={styles.introDescription}>{langContent.intro.description}</p>
      <div style={styles.languageSelectorQuiz}>
        <select value={lang} onChange={handleLanguageChange} style={styles.languageDropdown}>
            <option value="en-US">English</option> <option value="hi-IN">‡§π‡§ø‡§Ç‡§¶‡•Ä</option> <option value="ta-IN">‡Æ§‡ÆÆ‡Æø‡Æ¥‡Øç</option> <option value="te-IN">‡∞§‡±Ü‡∞≤‡±Å‡∞ó‡±Å</option> <option value="kn-IN">‡≤ï‡≤®‡≥ç‡≤®‡≤°</option>
        </select>
      </div>
      <button style={styles.actionButton} onClick={handleStartQuiz}>{langContent.intro.startButton}</button>
    </div>
  );

  const renderVideoScreen = () => (
    <div className="fade-in">
        <div style={styles.videoWrapper}>
            <video controls autoPlay width="100%" style={styles.video} key={lang} onEnded={handleSkipVideo}>
                <source src={langContent.videoUrl} type="video/mp4" />{langContent.videoNotSupported}
            </video>
        </div>
        <button style={{...styles.actionButton, backgroundColor: 'rgba(108, 117, 125, 0.9)'}} onClick={handleSkipVideo}>{langContent.common.skipVideo}</button>
    </div>
  );
  
  const renderQuizScreen = () => (
    <div className="question-animate-in">
        <h2 style={styles.subTitle}>{langContent.quizIntro.title}</h2>
        <div style={styles.speechBubble}>{currentQuestion.question}</div>
        <p style={styles.progressText}>Question {currentQuestionIndex + 1} of {langContent.questions.length}</p>
        {currentQuestion.type === 'mcq' && renderMCQ()}
        {currentQuestion.type === 'match' && renderMatch()}
        {isAnswered && (
        <div style={styles.feedbackContainer} className="fade-in">
            <p style={styles.feedback}>{feedback}</p>
            <button style={styles.actionButton} onClick={handleNextQuestion}>{langContent.common.nextQuestion}</button>
        </div>
        )}
    </div>
  );

  const renderMCQ = () => (
    <div style={{...styles.optionsGrid, ...(isMobile && styles.mobile.optionsGrid)}}>
      {currentQuestion.options.map((option) => {
        const isSelected = selectedOption === option.id;
        let backgroundColor = "rgba(0, 123, 255, 0.7)";
        if (isAnswered) {
          if (option.isCorrect) backgroundColor = "rgba(40, 167, 69, 0.8)";
          else if (isSelected) backgroundColor = "rgba(220, 53, 69, 0.8)";
          else backgroundColor = "rgba(108, 117, 125, 0.5)";
        }
        return <button key={option.id} style={{ ...styles.optionButton, backgroundColor }} onClick={() => handleMCQOptionClick(option)} disabled={isAnswered}>{option.text}</button>;
      })}
    </div>
  );
  
  const renderMatch = () => (
    <>
        <div style={{...styles.matchGrid, ...(isMobile && styles.mobile.matchGrid)}}>
            <div style={styles.matchColumn}>
                {currentQuestion.columns.a.map(item => (
                    <button key={item.id} onClick={() => setSelectedLeftItem(item.id === selectedLeftItem ? null : item.id)} style={{...styles.matchItem, ...(selectedLeftItem === item.id && styles.matchItemSelected), ...(!!matches[item.id] && styles.matchItemMatched) }} disabled={isAnswered || !!matches[item.id]}>{item.text}</button>
                ))}
            </div>
            <div style={styles.matchColumn}>
                {shuffledColumnB.map(item => {
                    const isMatched = Object.values(matches).includes(item.id);
                    let isCorrect = false;
                    if(isAnswered && isMatched) {
                        const leftKey = Object.keys(matches).find(key => matches[key] === item.id);
                        if(leftKey && currentQuestion.correctOrder[leftKey] === item.id) isCorrect = true;
                    }
                    return <button key={item.id} onClick={() => { if(selectedLeftItem) { setMatches(prev => ({ ...prev, [selectedLeftItem]: item.id })); setSelectedLeftItem(null); } }} style={{...styles.matchItem, ...(isMatched && !isAnswered && styles.matchItemMatched), ...(isAnswered && isMatched && (isCorrect ? styles.matchCorrect : styles.matchIncorrect))}} disabled={isAnswered || isMatched || !selectedLeftItem}>{item.text}</button>;
                })}
            </div>
        </div>
        {Object.keys(matches).length === currentQuestion.columns.a.length && !isAnswered && (
            <button style={styles.actionButton} onClick={handleCheckMatchAnswer}>{langContent.common.checkAnswer}</button>
        )}
    </>
  );

  const renderTransformationScreen = () => (
    <div className="question-animate-in">
        <div style={styles.speechBubble}>{chulhaRemoved ? langContent.game2.instruction2 : langContent.game2.instruction}</div>
        <div style={{...styles.kitchenScene, ...(lpgPlaced && styles.kitchenSceneClean)}}>
            <div style={styles.kitchenLeft} onDragOver={e => e.preventDefault()} onDrop={e => handleDropTransformation(e, 'in')}>
                {chulhaRemoved && !lpgPlaced && <span style={styles.dropText}>Drag New Cylinder Here</span>}
                {lpgPlaced && <div className="fade-in" style={{fontSize: '4rem'}}>‚ú®</div>}
            </div>
            <div style={styles.kitchenRight} onDragOver={e => e.preventDefault()} onDrop={e => handleDropTransformation(e, 'out')}>
                {!chulhaRemoved && <span style={styles.dropText}>Drag Old Stove Here</span>}
            </div>
        </div>
        <div style={{display: 'flex', justifyContent: 'space-around', marginTop: '20px', minHeight: '80px'}}>
            {!chulhaRemoved && <div draggable onDragStart={(e) => e.dataTransfer.setData('id', 'chulha')} style={styles.draggableItem}>üî• Old Stove</div>}
            {chulhaRemoved && !lpgPlaced && <div draggable onDragStart={(e) => e.dataTransfer.setData('id', 'lpg')} style={{...styles.draggableItem, backgroundColor: '#28a745', color: 'white'}}>‚ú® New LPG</div>}
        </div>
    </div>
  );

  const renderResultsScreen = () => {
    let postQuizContent;
    switch (postQuizState) {
        case 'answered_yes':
            postQuizContent = ( <div style={styles.infoBox} className="fade-in"><h3 style={styles.infoTitle}>{langContent.postQuiz.appliedMessageTitle}</h3><p>{langContent.postQuiz.appliedMessageText}</p><button style={styles.actionButton} onClick={handleShare}>{langContent.postQuiz.shareButton}</button></div> );
            break;
        case 'answered_no':
            postQuizContent = ( <div style={styles.infoBox} className="fade-in"><h3 style={styles.infoTitle}>{langContent.postQuiz.infoTitle}</h3><p>{langContent.postQuiz.infoText}</p><div style={styles.helplineBox}><p>{langContent.postQuiz.helplineText}</p><span>{langContent.postQuiz.helplineNumber}</span></div><p>{langContent.postQuiz.websiteText}</p><a href="https://www.pmuy.gov.in/" target="_blank" rel="noopener noreferrer" style={styles.websiteLink}>{langContent.postQuiz.websiteLinkText}</a></div> );
            break;
        default:
            postQuizContent = ( <div style={styles.postQuizContainer} className="fade-in"><p style={styles.postQuizQuestion}>{langContent.postQuiz.askApply}</p><div style={styles.postQuizButtons}><button style={{...styles.actionButton, backgroundColor: 'rgba(40, 167, 69, 0.8)'}} onClick={() => setPostQuizState('answered_yes')}>{langContent.postQuiz.yesButton}</button><button style={{...styles.actionButton, backgroundColor: 'rgba(220, 53, 69, 0.8)'}} onClick={() => setPostQuizState('answered_no')}>{langContent.postQuiz.noButton}</button></div></div> );
    }
    return ( <div style={styles.resultsContainer} className="fade-in"><h2 style={styles.title}>{langContent.results.title}</h2><p style={styles.finalScoreText}>{langContent.results.scoreText}</p><ScoreCounter finalScore={score} />{postQuizContent}<button style={{...styles.actionButton, marginTop: '30px', backgroundColor: '#007bff'}} onClick={handleRestart}>{langContent.results.playAgain}</button></div> );
  };
  
  const renderContent = () => {
    switch (gameState) {
        case 'video': return renderVideoScreen();
        case 'quiz': return renderQuizScreen();
        case 'transformation': return renderTransformationScreen();
        case 'results': return renderResultsScreen();
        case 'intro':
        default: return renderIntroScreen();
    }
  };

  return (
    <div style={styles.pageBackground}>
        <style>{`
            .fade-in { animation: fadeInAnimation ease 1s; } @keyframes fadeInAnimation { 0% { opacity: 0; } 100% { opacity: 1; } }
            .question-animate-in { animation: questionAnimateIn .7s ease-out; } @keyframes questionAnimateIn { 0% { opacity: 0; transform: translateY(20px); } 100% { opacity: 1; transform: translateY(0); } }
            @keyframes avatar-bob { 0% { transform: translateY(0); } 50% { transform: translateY(-15px); } 100% { transform: translateY(0); } }
        `}</style>
        <div style={styles.container}>{renderContent()}</div>
        <div style={styles.audioControlsContainer}>
            <button onClick={toggleMusic} style={styles.audioButton} title="Toggle Music">{isMusicPlaying ? 'üéµ' : 'üé∂'}</button>
            <button onClick={toggleTts} style={styles.audioButton} title="Toggle Speech">{isTtsEnabled ? 'üó£Ô∏è' : 'ü§´'}</button>
        </div>
    </div>
  );
};

// --- Helper Components & Styles ---
const styles = {
    pageBackground: { background: 'linear-gradient(-45deg, #fbe9e7, #fff3e0, #e3f2fd, #f1e6ff)', backgroundSize: '400% 400%', animation: 'gradient 15s ease infinite', minHeight: '100vh', padding: '20px', display: 'flex', alignItems: 'center', justifyContent: 'center', overflowX: 'hidden' },
    container: { position: 'relative', width: '100%', maxWidth: '800px', padding: '40px', fontFamily: "'Poppins', sans-serif", backgroundColor: 'rgba(255, 255, 255, 0.7)', backdropFilter: 'blur(15px)', borderRadius: '20px', border: '1px solid rgba(255, 255, 255, 0.2)', boxShadow: '0 8px 32px 0 rgba(191, 54, 12, 0.25)', color: '#333', textAlign: 'center' },
    introContainer: { display: 'flex', flexDirection: 'column', alignItems: 'center', gap: '20px' },
    avatar: { fontSize: '5rem', animation: 'avatar-bob 3s ease-in-out infinite' },
    speechBubble: { position: 'relative', backgroundColor: 'white', padding: '15px 20px', borderRadius: '15px', maxWidth: '80%', margin: '0 auto 25px auto', fontSize: '1.2rem', boxShadow: '0 4px 10px rgba(0,0,0,0.1)' },
    introDescription: { fontSize: '1.2rem', maxWidth: '500px', lineHeight: 1.6, color: '#444' },
    languageSelectorQuiz: { display: 'flex', alignItems: 'center', gap: '10px', backgroundColor: 'rgba(255,255,255,0.5)', padding: '10px 20px', borderRadius: '50px' },
    languageDropdown: { padding: '8px 12px', borderRadius: '8px', border: '1px solid #ccc', fontSize: '1rem', backgroundColor: '#fff' },
    title: { textAlign: 'center', color: '#bf360c', fontSize: '2.5rem', marginBottom: '10px', fontWeight: '700', textShadow: '1px 1px 3px rgba(0, 0, 0, 0.2)' },
    subTitle: { color: '#d35400', fontSize: '1.8rem', marginBottom: '10px' },
    progressText: { color: '#555', fontSize: '0.9rem', marginBottom: '15px' },
    draggableItem: { padding: '15px 25px', backgroundColor: 'rgba(255, 255, 255, 0.9)', borderRadius: '12px', cursor: 'grab', border: '2px solid #007bff', transition: 'transform 0.2s ease', userSelect: 'none' },
    kitchenScene: { minHeight: '200px', backgroundColor: '#694E4E', backgroundImage: 'radial-gradient(circle, rgba(0,0,0,0.5) 0%, rgba(0,0,0,0.8) 100%)', borderRadius: '15px', padding: '20px', display: 'flex', justifyContent: 'space-between', color: 'white', transition: 'all 1s ease' },
    kitchenSceneClean: { backgroundColor: '#87CEEB', backgroundImage: 'radial-gradient(circle, #a1dffb 0%, #87CEEB 100%)'},
    kitchenLeft: { flex: 1, border: '2px dashed white', borderRadius: '10px', display: 'flex', alignItems: 'center', justifyContent: 'center', minHeight: '150px' },
    kitchenRight: { flex: 1, border: '2px dashed white', borderRadius: '10px', display: 'flex', alignItems: 'center', justifyContent: 'center', minHeight: '150px' },
    dropText: { color: 'rgba(255,255,255,0.7)'},
    videoWrapper: { margin: '0 auto 25px auto', maxWidth: '600px', borderRadius: '12px', overflow: 'hidden', boxShadow: '0 4px 15px rgba(0,0,0,0.1)' },
    video: { display: 'block', width: '100%' },
    optionsGrid: { display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '15px', maxWidth: '600px', margin: '20px auto' },
    optionButton: { padding: '15px 20px', fontSize: '1rem', color: 'white', border: '1px solid rgba(255,255,255,0.3)', borderRadius: '12px', cursor: 'pointer', transition: 'all 0.3s ease', boxShadow: '0 4px 15px rgba(0,0,0,0.1)', minHeight: '60px', display: 'flex', alignItems: 'center', justifyContent: 'center' },
    feedbackContainer: { marginTop: '25px', padding: '20px', borderRadius: '12px', backgroundColor: 'rgba(255, 255, 255, 0.7)', backdropFilter: 'blur(5px)', border: '1px solid rgba(255,255,255,0.2)' },
    feedback: { fontSize: '1.2rem', fontWeight: 'bold', margin: '0 0 15px 0', color: '#333' },
    actionButton: { padding: '12px 30px', fontSize: '1.1rem', fontWeight: '600', color: 'white', backgroundColor: 'rgba(255, 111, 0, 0.9)', border: 'none', borderRadius: '50px', cursor: 'pointer', transition: 'all 0.3s ease', boxShadow: '0 4px 15px rgba(255, 111, 0, 0.4)', textTransform: 'uppercase' },
    resultsContainer: { textAlign: 'center', padding: '20px' },
    finalScoreText: { fontSize: '1.5rem', color: '#555' },
    finalScoreNumber: { fontSize: '4.5rem', fontWeight: 'bold', color: '#bf360c', margin: '10px 0 30px 0', textShadow: '2px 2px 4px rgba(0,0,0,0.1)' },
    postQuizContainer: { borderTop: '1px solid rgba(255, 193, 7, 0.5)', paddingTop: '25px', marginTop: '25px' },
    postQuizQuestion: { fontSize: '1.2rem', color: '#333', marginBottom: '20px' },
    postQuizButtons: { display: 'flex', justifyContent: 'center', gap: '20px', flexWrap: 'wrap' },
    infoBox: { backgroundColor: 'rgba(255, 255, 255, 0.7)', border: '1px solid rgba(255, 255, 255, 0.3)', borderRadius: '12px', padding: '25px', marginTop: '20px', maxWidth: '600px', margin: '20px auto', backdropFilter: 'blur(5px)', textAlign: 'center' },
    infoTitle: { color: '#bf360c', marginTop: '0', textAlign: 'center' },
    helplineBox: { backgroundColor: 'rgba(227, 242, 253, 0.8)', border: '1px solid #90caf9', borderRadius: '8px', padding: '15px', margin: '20px 0', textAlign: 'center' },
    websiteLink: { display: 'inline-block', padding: '10px 25px', backgroundColor: 'rgba(0, 123, 255, 0.8)', color: 'white', textDecoration: 'none', borderRadius: '8px', fontWeight: 'bold', marginTop: '10px', transition: 'all 0.3s ease' },
    audioControlsContainer: { position: 'fixed', bottom: '20px', right: '20px', display: 'flex', flexDirection: 'column', gap: '10px', zIndex: 1000 },
    audioButton: { width: '50px', height: '50px', borderRadius: '50%', border: '1px solid rgba(255, 255, 255, 0.4)', backgroundColor: 'rgba(255, 255, 255, 0.6)', backdropFilter: 'blur(10px)', boxShadow: '0 4px 15px rgba(0,0,0,0.1)', cursor: 'pointer', fontSize: '1.5rem', display: 'flex', alignItems: 'center', justifyContent: 'center', transition: 'all 0.3s ease' },
    matchGrid: { display: 'grid', gridTemplateColumns: '1fr 1fr', gap: '20px', maxWidth: '650px', margin: '20px auto' },
    matchColumn: { display: 'flex', flexDirection: 'column', gap: '10px' },
    matchItem: { padding: '15px', fontSize: '1rem', border: '2px solid #007bff', backgroundColor: 'rgba(255, 255, 255, 0.8)', color: '#007bff', borderRadius: '12px', cursor: 'pointer', transition: 'all 0.3s ease', minHeight: '60px', display: 'flex', alignItems: 'center', justifyContent: 'center', textAlign: 'center' },
    matchItemSelected: { backgroundColor: '#007bff', color: 'white', transform: 'scale(1.05)', boxShadow: '0 6px 20px rgba(0, 123, 255, 0.4)' },
    matchItemMatched: { border: '2px solid #6c757d', backgroundColor: 'rgba(233, 236, 239, 0.8)', color: '#495057', cursor: 'not-allowed' },
    matchCorrect: { border: '2px solid #28a745', backgroundColor: 'rgba(212, 237, 218, 0.8)', color: '#155724' },
    matchIncorrect: { border: '2px solid #dc3545', backgroundColor: 'rgba(248, 215, 218, 0.8)', color: '#721c24' },
    mobile: {
        container: { padding: '20px', margin: '0 10px' },
        title: { fontSize: '1.8rem' },
        optionsGrid: { gridTemplateColumns: '1fr', gap: '10px' },
        matchGrid: { gridTemplateColumns: '1fr', gap: '10px' },
    }
};

export default Ujjwala;